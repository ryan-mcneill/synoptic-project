{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/PlaylistTab.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport isempty from \"lodash.isempty\";\nimport { InfoTile } from \"./\";\nimport { artistsToString } from \"../../utils\";\nimport { setIsOpen, shuffleSongs, updatePlaylist } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen)),\n  shuffleSongs: () => dispatch(shuffleSongs()),\n  updatePlaylist: ({\n    previous,\n    current,\n    next\n  }) => dispatch(updatePlaylist({\n    previous,\n    current,\n    next\n  }))\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst PlaylistTab = ({\n  current,\n  next,\n  previous,\n  setIsOpen,\n  shuffleSongs,\n  updatePlaylist\n}) => {\n  let buttonsDisabled = previous && previous.length < 0 && next && next.length < 0 && !current || isempty(current);\n\n  const handleTileClick = () => {\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    updatePlaylist({\n      previous: [],\n      next: []\n    });\n  };\n\n  const handleShuffle = () => {\n    shuffleSongs();\n  };\n\n  const handleSave = () => {\n    console.log(\"save button clicked\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"FUCK YOU\", previous && previous.length > 0 && previous.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleTileClick(),\n    id: playlist._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), current && /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${current._id}`,\n    title: current.name,\n    subtitle: artistsToString(current.artists),\n    onClick: () => handleTileClick(),\n    selected: true,\n    id: current._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), next && next.length > 0 && next.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleTileClick(),\n    id: playlist._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), (!next || next.length === 0) && (!previous || previous.length === 0) && !current && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Use the Songs or Search tab to add songs to the playlist.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"4vh\",\n      width: \"80vw\",\n      fontSize: \"36px\",\n      position: \"absolute\",\n      bottom: \"5vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"CLEAR\",\n    style: {\n      width: \"50%\",\n      fontSize: \"36px\",\n      fontWeight: \"bolder\",\n      paddingLeft: \"2vw\",\n      background: \"none\"\n    },\n    onClick: handleClear,\n    disabled: buttonsDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"SHUFFLE\",\n    style: {\n      width: \"50%\",\n      fontSize: \"36px\",\n      fontWeight: \"bolder\",\n      paddingLeft: \"2vw\",\n      background: \"none\"\n    },\n    onClick: handleShuffle,\n    disabled: buttonsDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connector(PlaylistTab);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/PlaylistTab.tsx"],"names":["React","connect","isempty","InfoTile","artistsToString","setIsOpen","shuffleSongs","updatePlaylist","mapDispatchToProps","dispatch","isOpen","previous","current","next","mapStateToProps","state","playlist","connector","PlaylistTab","buttonsDisabled","length","handleTileClick","handleClear","handleShuffle","handleSave","console","log","map","_id","name","artists","fontSize","textAlign","display","height","width","position","bottom","fontWeight","paddingLeft","background"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { Action } from \"redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport isempty from \"lodash.isempty\";\nimport { InfoTile } from \"./\";\nimport { artistsToString } from \"../../utils\";\nimport { PlaylistState, State } from \"../../store/types\";\nimport { setIsOpen, shuffleSongs, updatePlaylist } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setIsOpen: (isOpen: boolean) => dispatch(setIsOpen(isOpen)),\n  shuffleSongs: () => dispatch(shuffleSongs()),\n  updatePlaylist: ({ previous, current, next }: PlaylistState) =>\n    dispatch(updatePlaylist({ previous, current, next }))\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst PlaylistTab: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  setIsOpen,\n  shuffleSongs,\n  updatePlaylist\n}): ReactElement => {\n  let buttonsDisabled =\n    (previous && previous.length < 0 && next && next.length < 0 && !current) ||\n    isempty(current);\n\n  const handleTileClick = () => {\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    updatePlaylist({ previous: [], next: [] });\n  };\n\n  const handleShuffle = () => {\n    shuffleSongs();\n  };\n\n  const handleSave = () => {\n    console.log(\"save button clicked\");\n  };\n\n  return (\n    <>\n      FUCK YOU\n      {previous &&\n        previous.length > 0 &&\n        previous.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleTileClick()}\n            id={playlist._id}\n          />\n        ))}\n      {current && (\n        <InfoTile\n          key={`info-tile-${current._id}`}\n          title={current.name}\n          subtitle={artistsToString(current.artists)}\n          onClick={() => handleTileClick()}\n          selected\n          id={current._id}\n        />\n      )}\n      {next &&\n        next.length > 0 &&\n        next.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleTileClick()}\n            id={playlist._id}\n          />\n        ))}\n      {(!next || next.length === 0) &&\n        (!previous || previous.length === 0) &&\n        !current && (\n          <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n            Use the Songs or Search tab to add songs to the playlist.\n          </div>\n        )}\n\n      <div\n        style={{\n          display: \"flex\",\n          height: \"4vh\",\n          width: \"80vw\",\n          fontSize: \"36px\",\n          position: \"absolute\",\n          bottom: \"5vh\"\n        }}\n      >\n        <input\n          type=\"button\"\n          value=\"CLEAR\"\n          style={{\n            width: \"50%\",\n            fontSize: \"36px\",\n            fontWeight: \"bolder\",\n            paddingLeft: \"2vw\",\n            background: \"none\"\n          }}\n          onClick={handleClear}\n          disabled={buttonsDisabled}\n        />\n        <input\n          type=\"button\"\n          value=\"SHUFFLE\"\n          style={{\n            width: \"50%\",\n            fontSize: \"36px\",\n            fontWeight: \"bolder\",\n            paddingLeft: \"2vw\",\n            background: \"none\"\n          }}\n          onClick={handleShuffle}\n          disabled={buttonsDisabled}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default connector(PlaylistTab);\n"]},"metadata":{},"sourceType":"module"}