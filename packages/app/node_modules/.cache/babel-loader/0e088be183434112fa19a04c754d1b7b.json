{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/MusicPlayer/Controls.tsx\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause, faPlay, faStepBackward, faStepForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { togglePlaying } from \"../../store/actions\";\nimport { nextSong, prevSong } from \"../../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  togglePlaying: playing => dispatch(togglePlaying(playing)),\n  nextSong: () => dispatch(nextSong()),\n  prevSong: () => dispatch(prevSong())\n});\n\nconst mapStateToProps = state => {\n  var _state$currentSong$ba, _state$currentSong, _state$playlist$curre;\n\n  return {\n    isDark: (_state$currentSong$ba = state.currentSong.background) === null || _state$currentSong$ba === void 0 ? void 0 : _state$currentSong$ba.isDark,\n    isPlaying: (_state$currentSong = state.currentSong) === null || _state$currentSong === void 0 ? void 0 : _state$currentSong.isPlaying,\n    songId: (_state$playlist$curre = state.playlist.current) === null || _state$playlist$curre === void 0 ? void 0 : _state$playlist$curre._id,\n    data: state.playlist.current\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Controls = ({\n  data,\n  isDark,\n  isPlaying,\n  songId,\n  togglePlaying,\n  nextSong\n}) => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  let audioPlayer;\n\n  const onSongLoad = data => {\n    var _audioPlayer, _audioPlayer$audioEl;\n\n    if ((_audioPlayer = audioPlayer) === null || _audioPlayer === void 0 ? void 0 : (_audioPlayer$audioEl = _audioPlayer.audioEl) === null || _audioPlayer$audioEl === void 0 ? void 0 : _audioPlayer$audioEl.current) {\n      if (isPlaying) audioPlayer.audioEl.current.play();\n      setSongLength(audioPlayer.audioEl.current.duration);\n    }\n  };\n\n  const formatTime = time => {\n    const tempDate = new Date(Math.round(time) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n    return minutes.toString().padStart(2, \"0\") + \":\" + seconds.toString().padStart(2, \"0\");\n  };\n\n  const playStatusHandler = () => {\n    var _audioPlayer2, _audioPlayer2$audioEl;\n\n    if (data && ((_audioPlayer2 = audioPlayer) === null || _audioPlayer2 === void 0 ? void 0 : (_audioPlayer2$audioEl = _audioPlayer2.audioEl) === null || _audioPlayer2$audioEl === void 0 ? void 0 : _audioPlayer2$audioEl.current)) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  const nextHandler = () => {\n    if (data) {\n      nextSong();\n      setSongTime(0);\n    }\n  };\n\n  const prevHandler = () => {\n    if (data) {\n      prevSong();\n      setSongTime(0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"10vh\",\n      width: \"90vw\",\n      position: \"absolute\",\n      bottom: 0,\n      padding: \"0 5vw 5vh 5vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    ref: element => audioPlayer = element,\n    src: songId ? `/api/song/${songId}` : \"\",\n    listenInterval: 1000,\n    onListen: e => setSongTime(e),\n    onLoadedMetadata: data => onSongLoad(data),\n    onEnded: () => nextHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => prevHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepBackward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"96px\",\n      margin: \"0 96px\"\n    },\n    onClick: playStatusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: isPlaying ? faPause : faPlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => nextHandler(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: \"48px\",\n      fontSize: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, formatTime(songTime)), /*#__PURE__*/React.createElement(\"input\", {\n    className: classnames({\n      dark: !isDark,\n      light: isDark\n    }),\n    type: \"range\",\n    style: {\n      width: \"100%\",\n      margin: \"0 24px\"\n    },\n    min: \"0\",\n    max: songLength,\n    defaultValue: songTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, formatTime(songLength))));\n};\n\nexport default connector(Controls);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/MusicPlayer/Controls.tsx"],"names":["React","useState","FontAwesomeIcon","faPause","faPlay","faStepBackward","faStepForward","connect","classnames","ReactAudioPlayer","togglePlaying","nextSong","prevSong","mapDispatchToProps","dispatch","playing","mapStateToProps","state","isDark","currentSong","background","isPlaying","songId","playlist","current","_id","data","connector","Controls","songLength","setSongLength","songTime","setSongTime","audioPlayer","onSongLoad","audioEl","play","duration","formatTime","time","tempDate","Date","Math","round","minutes","getMinutes","seconds","getSeconds","toString","padStart","playStatusHandler","nextHandler","prevHandler","height","width","position","bottom","padding","element","e","display","alignItems","justifyContent","fontSize","margin","marginTop","dark","light"],"mappings":"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","sourcesContent":["import React, { ReactElement, SyntheticEvent, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPause,\n  faPlay,\n  faStepBackward,\n  faStepForward\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { ChangeSongType, State } from \"../../store/types\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { togglePlaying } from \"../../store/actions\";\nimport { nextSong, prevSong } from \"../../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  togglePlaying: (playing?: boolean) => dispatch(togglePlaying(playing)),\n  nextSong: () => dispatch(nextSong()),\n  prevSong: () => dispatch(prevSong())\n});\n\nconst mapStateToProps = (state: State) => ({\n  isDark: state.currentSong.background?.isDark,\n  isPlaying: state.currentSong?.isPlaying,\n  songId: state.playlist.current?._id,\n  data: state.playlist.current\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Controls: React.FC<PropsFromRedux> = ({\n  data,\n  isDark,\n  isPlaying,\n  songId,\n  togglePlaying,\n  nextSong\n}): ReactElement => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  let audioPlayer: ReactAudioPlayer;\n\n  const onSongLoad = (data: SyntheticEvent<HTMLAudioElement, Event>) => {\n    if (audioPlayer?.audioEl?.current) {\n      if (isPlaying) audioPlayer.audioEl.current.play();\n      setSongLength(audioPlayer.audioEl.current.duration);\n    }\n  };\n\n  const formatTime = (time: number): string => {\n    const tempDate = new Date(Math.round(time) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n\n    return (\n      minutes.toString().padStart(2, \"0\") +\n      \":\" +\n      seconds.toString().padStart(2, \"0\")\n    );\n  };\n\n  const playStatusHandler = () => {\n    if (data && audioPlayer?.audioEl?.current) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  const nextHandler = () => {\n    if (data) {\n      nextSong();\n      setSongTime(0);\n    }\n  };\n\n  const prevHandler = () => {\n    if (data) {\n      prevSong();\n      setSongTime(0);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        height: \"10vh\",\n        width: \"90vw\",\n        position: \"absolute\",\n        bottom: 0,\n        padding: \"0 5vw 5vh 5vw\"\n      }}\n    >\n      <ReactAudioPlayer\n        ref={(element: ReactAudioPlayer) => (audioPlayer = element)}\n        src={songId ? `/api/song/${songId}` : \"\"}\n        listenInterval={1000}\n        onListen={(e) => setSongTime(e)}\n        onLoadedMetadata={(data) => onSongLoad(data)}\n        onEnded={() => nextHandler()}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div style={{ fontSize: \"48px\" }} onClick={() => prevHandler()}>\n          <FontAwesomeIcon icon={faStepBackward} />\n        </div>\n        <div\n          style={{ fontSize: \"96px\", margin: \"0 96px\" }}\n          onClick={playStatusHandler}\n        >\n          <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n        </div>\n        <div style={{ fontSize: \"48px\" }} onClick={() => nextHandler()}>\n          <FontAwesomeIcon icon={faStepForward} />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: \"48px\",\n          fontSize: \"32px\"\n        }}\n      >\n        <div>{formatTime(songTime)}</div>\n        <input\n          className={classnames({ dark: !isDark, light: isDark })}\n          type=\"range\"\n          style={{ width: \"100%\", margin: \"0 24px\" }}\n          min=\"0\"\n          max={songLength}\n          defaultValue={songTime}\n        />\n        <div>{formatTime(songLength)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Controls);\n"]},"metadata":{},"sourceType":"module"}