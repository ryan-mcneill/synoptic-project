{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx\";\nimport React from \"react\";\nimport { InfoTile } from \"./\";\nimport { connect } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { changeSong } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  changeSong: id => dispatch(changeSong({\n    id\n  }))\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Playlist = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}) => {\n  const handleClick = id => {// changeSong(playlist._id);\n    // setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, selectedTab === \"PLAYLIST\" && previous && previous.length > 0 ? previous.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleClick(playlist._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : selectedTab === \"PLAYLIST\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"There are no song playlists currently selected.\"));\n};\n\nexport default connector(Playlist);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx"],"names":["React","InfoTile","connect","artistsToString","changeSong","mapDispatchToProps","dispatch","id","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","Playlist","handleClick","length","map","_id","name","artists","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,IAAzB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,eAAT,QAAgC,aAAhC;AAGA,SAASC,UAAT,QAAsC,qBAAtC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,UAAU,EAAGG,EAAD,IAAgBD,QAAQ,CAACF,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAX;AADwC,CAAnD,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD,OADiB;AAEzCE,EAAAA,IAAI,EAAEH,KAAK,CAACE,QAAN,CAAeC,IAFoB;AAGzCC,EAAAA,QAAQ,EAAEJ,KAAK,CAACE,QAAN,CAAeE,QAHgB;AAIzCC,EAAAA,WAAW,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJiB,CAAnB,CAAxB;;AAOA,MAAME,SAAS,GAAGd,OAAO,CAACM,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMY,QAA4B,GAAG,CAAC;AACpCP,EAAAA,OADoC;AAEpCE,EAAAA,IAFoC;AAGpCC,EAAAA,QAHoC;AAIpCC,EAAAA;AAJoC,CAAD,KAKjB;AAClB,QAAMI,WAAW,GAAIX,EAAD,IAAgB,CAClC;AACA;AACD,GAHD;;AAIA,sBACE,0CACGO,WAAW,KAAK,UAAhB,IAA8BD,QAA9B,IAA0CA,QAAQ,CAACM,MAAT,GAAkB,CAA5D,GACGN,QAAQ,CAACO,GAAT,CAAcT,QAAD,iBACX,oBAAC,QAAD;AACE,IAAA,GAAG,EAAG,aAAYA,QAAQ,CAACU,GAAI,EADjC;AAEE,IAAA,KAAK,EAAEV,QAAQ,CAACW,IAFlB;AAGE,IAAA,QAAQ,EAAEnB,eAAe,CAACQ,QAAQ,CAACY,OAAV,CAH3B;AAIE,IAAA,OAAO,EAAE,MAAML,WAAW,CAACP,QAAQ,CAACU,GAAV,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GASGP,WAAW,KAAK,UAAhB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAXR,CADF;AAkBD,CA5BD;;AA8BA,eAAeT,SAAS,CAACC,QAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { changeSong, setIsOpen } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  changeSong: (id: string) => dispatch(changeSong({ id }))\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Playlist: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    // changeSong(playlist._id);\n    // setIsOpen(false);\n  };\n  return (\n    <>\n      {selectedTab === \"PLAYLIST\" && previous && previous.length > 0\n        ? previous.map((playlist) => (\n            <InfoTile\n              key={`info-tile-${playlist._id}`}\n              title={playlist.name}\n              subtitle={artistsToString(playlist.artists)}\n              onClick={() => handleClick(playlist._id)}\n            />\n          ))\n        : selectedTab === \"PLAYLIST\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              There are no song playlists currently selected.\n            </div>\n          )}\n    </>\n  );\n};\n\nexport default connector(Playlist);\n"]},"metadata":{},"sourceType":"module"}