{"ast":null,"code":"import get from \"axios\";\nimport { FETCH_SONGS, FETCH_SONGS_FAILURE, FETCH_SONGS_SUCCESS } from \"../types\";\n\nconst fetchSongsAction = () => ({\n  type: FETCH_SONGS\n});\n\nconst fetchSongsFailure = error => ({\n  type: FETCH_SONGS_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst fetchSongsSuccess = songs => ({\n  type: FETCH_SONGS_SUCCESS,\n  payload: songs\n});\n\nexport const fetchSongs = () => {\n  return dispatch => {\n    dispatch(fetchSongsAction());\n    get(`/api/songs/all/all`).then(songsData => {\n      dispatch(fetchSongsSuccess(songsData));\n    }).catch(err => {\n      dispatch(fetchSongsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/actions/songsActions.ts"],"names":["get","FETCH_SONGS","FETCH_SONGS_FAILURE","FETCH_SONGS_SUCCESS","fetchSongsAction","type","fetchSongsFailure","error","payload","fetchSongsSuccess","songs","fetchSongs","dispatch","then","songsData","catch","err","message"],"mappings":"AAAA,OAAOA,GAAP,MAAmC,OAAnC;AAEA,SAEEC,WAFF,EAGEC,mBAHF,EAIEC,mBAJF,QASO,UATP;;AAWA,MAAMC,gBAAiD,GAAG,OAAO;AAC/DC,EAAAA,IAAI,EAAEJ;AADyD,CAAP,CAA1D;;AAIA,MAAMK,iBAAyD,GAAIC,KAAD,KAAY;AAC5EF,EAAAA,IAAI,EAAEH,mBADsE;AAE5EM,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAFmE,CAAZ,CAAlE;;AAKA,MAAME,iBAAyD,GAAIC,KAAD,KAAY;AAC5EL,EAAAA,IAAI,EAAEF,mBADsE;AAE5EK,EAAAA,OAAO,EAAEE;AAFmE,CAAZ,CAAlE;;AAKA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAwB;AAC7BA,IAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAEAJ,IAAAA,GAAG,CAAE,oBAAF,CAAH,CACGa,IADH,CACSC,SAAD,IAAsC;AAC1CF,MAAAA,QAAQ,CAACH,iBAAiB,CAACK,SAAD,CAAlB,CAAR;AACD,KAHH,EAIGC,KAJH,CAIUC,GAAD,IAAgB;AACrBJ,MAAAA,QAAQ,CAACN,iBAAiB,CAACU,GAAG,CAACC,OAAL,CAAlB,CAAR;AACD,KANH;AAOD,GAVD;AAWD,CAZM","sourcesContent":["import get, { AxiosResponse } from \"axios\";\nimport { ActionCreator, Dispatch } from \"redux\";\nimport {\n  BasicDetails,\n  FETCH_SONGS,\n  FETCH_SONGS_FAILURE,\n  FETCH_SONGS_SUCCESS,\n  FetchSongsAction,\n  FetchSongsFailureAction,\n  FetchSongsSuccessAction,\n  Song\n} from \"../types\";\n\nconst fetchSongsAction: ActionCreator<FetchSongsAction> = () => ({\n  type: FETCH_SONGS\n});\n\nconst fetchSongsFailure: ActionCreator<FetchSongsFailureAction> = (error) => ({\n  type: FETCH_SONGS_FAILURE,\n  payload: { error }\n});\n\nconst fetchSongsSuccess: ActionCreator<FetchSongsSuccessAction> = (songs) => ({\n  type: FETCH_SONGS_SUCCESS,\n  payload: songs\n});\n\nexport const fetchSongs = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchSongsAction());\n\n    get(`/api/songs/all/all`)\n      .then((songsData: AxiosResponse<Song[]>) => {\n        dispatch(fetchSongsSuccess(songsData));\n      })\n      .catch((err: Error) => {\n        dispatch(fetchSongsFailure(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}