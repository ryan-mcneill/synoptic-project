{"ast":null,"code":"import axios from \"axios\";\nimport { CHANGE_SONG, FETCH_PLAYLIST_FAILURE, FETCH_PLAYLIST_SUCCESS, TOGGLE_PLAYING } from \"./types\";\nexport const fetchPlaylist = () => {\n  return dispatch => {\n    console.log(\"hi\");\n    axios.get(\"/api/song\").then(res => {\n      dispatch(fetchPlaylistSuccess(res));\n    }).catch(err => {\n      dispatch(fetchPlaylistFailure(err));\n    });\n  };\n};\nexport const fetchPlaylistFailure = error => ({\n  type: FETCH_PLAYLIST_FAILURE,\n  payload: {\n    error\n  }\n});\nexport const fetchPlaylistSuccess = playlist => ({\n  type: FETCH_PLAYLIST_SUCCESS,\n  payload: { ...playlist\n  }\n});\nexport const changeSong = newSong => ({\n  type: CHANGE_SONG,\n  payload: newSong\n});\nexport const togglePlaying = () => ({\n  type: TOGGLE_PLAYING\n});","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/client/src/store/actions.ts"],"names":["axios","CHANGE_SONG","FETCH_PLAYLIST_FAILURE","FETCH_PLAYLIST_SUCCESS","TOGGLE_PLAYING","fetchPlaylist","dispatch","console","log","get","then","res","fetchPlaylistSuccess","catch","err","fetchPlaylistFailure","error","type","payload","playlist","changeSong","newSong","togglePlaying"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAGEC,sBAHF,EAIEC,sBAJF,EASEC,cATF,QAUO,SAVP;AAYA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAwB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAR,IAAAA,KAAK,CACFS,GADH,CACO,WADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbL,MAAAA,QAAQ,CAACM,oBAAoB,CAACD,GAAD,CAArB,CAAR;AACD,KAJH,EAKGE,KALH,CAKUC,GAAD,IAAS;AACdR,MAAAA,QAAQ,CAACS,oBAAoB,CAACD,GAAD,CAArB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMC,oBAA+D,GAC1EC,KAD6E,KAEzE;AACJC,EAAAA,IAAI,EAAEf,sBADF;AAEJgB,EAAAA,OAAO,EAAE;AAAEF,IAAAA;AAAF;AAFL,CAFyE,CAAxE;AAOP,OAAO,MAAMJ,oBAA+D,GAC1EO,QAD6E,KAEzE;AACJF,EAAAA,IAAI,EAAEd,sBADF;AAEJe,EAAAA,OAAO,EAAE,EACP,GAAGC;AADI;AAFL,CAFyE,CAAxE;AASP,OAAO,MAAMC,UAA2C,GAAIC,OAAD,KAAoB;AAC7EJ,EAAAA,IAAI,EAAEhB,WADuE;AAE7EiB,EAAAA,OAAO,EAAEG;AAFoE,CAApB,CAApD;AAKP,OAAO,MAAMC,aAAiD,GAAG,OAAO;AACtEL,EAAAA,IAAI,EAAEb;AADgE,CAAP,CAA1D","sourcesContent":["import { ActionCreator, Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport {\n  CHANGE_SONG,\n  ChangeSongAction,\n  FETCH_PLAYLIST_FAILURE,\n  FETCH_PLAYLIST_SUCCESS,\n  FetchPlaylistFailureAction,\n  FetchPlaylistSuccessAction,\n  PlayingStatusAction,\n  Song,\n  TOGGLE_PLAYING\n} from \"./types\";\n\nexport const fetchPlaylist = () => {\n  return (dispatch: Dispatch) => {\n    console.log(\"hi\")\n    axios\n      .get(\"/api/song\")\n      .then((res) => {\n        dispatch(fetchPlaylistSuccess(res));\n      })\n      .catch((err) => {\n        dispatch(fetchPlaylistFailure(err));\n      });\n  };\n};\n\nexport const fetchPlaylistFailure: ActionCreator<FetchPlaylistFailureAction> = (\n  error\n) => ({\n  type: FETCH_PLAYLIST_FAILURE,\n  payload: { error }\n});\n\nexport const fetchPlaylistSuccess: ActionCreator<FetchPlaylistSuccessAction> = (\n  playlist\n) => ({\n  type: FETCH_PLAYLIST_SUCCESS,\n  payload: {\n    ...playlist\n  }\n});\n\nexport const changeSong: ActionCreator<ChangeSongAction> = (newSong: Song) => ({\n  type: CHANGE_SONG,\n  payload: newSong\n});\n\nexport const togglePlaying: ActionCreator<PlayingStatusAction> = () => ({\n  type: TOGGLE_PLAYING\n});\n"]},"metadata":{},"sourceType":"module"}