{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx\";\nimport React from \"react\";\nimport { InfoTile } from \"./\";\nimport { connect } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { setIsOpen } from \"../../store/actions\";\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps);\n\nconst Playlist = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}) => {\n  const handleClick = id => {\n    if (current && current._id !== id) {\n      const updatedPrevious = []; // @ts-ignore\n\n      const currentIndex = next.reduce((acc, curr, index) => {\n        if (curr._id === id) {\n          acc = index;\n          return acc;\n        }\n      }, 0);\n      const updatedCurrent = false;\n      const updatedNext = []; // updatePlaylist({previous: []})\n    }\n\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, selectedTab === \"PLAYLIST\" && previous && previous.length > 0 && previous.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleClick(playlist._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), selectedTab === \"PLAYLIST\" && current && /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${current._id}`,\n    title: current.name,\n    subtitle: artistsToString(current.artists),\n    onClick: () => handleClick(current._id),\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), selectedTab === \"PLAYLIST\" && next && next.length > 0 && next.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleClick(playlist._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default connector(Playlist);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx"],"names":["React","InfoTile","connect","artistsToString","setIsOpen","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","Playlist","handleClick","id","_id","updatedPrevious","currentIndex","reduce","acc","curr","index","updatedCurrent","updatedNext","length","map","name","artists"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { setIsOpen } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport { playlist } from \"../../store/reducers/playlistReducers\";\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Playlist: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    if (current && current._id !== id) {\n      const updatedPrevious = [];\n      // @ts-ignore\n      const currentIndex = next.reduce((acc, curr, index) => {\n        if (curr._id === id) {\n          acc = index;\n          return acc;\n        }\n      }, 0);\n      const updatedCurrent = false;\n      const updatedNext = [];\n      // updatePlaylist({previous: []})\n    }\n\n    setIsOpen(false);\n  };\n  return (\n    <>\n      {selectedTab === \"PLAYLIST\" &&\n        previous &&\n        previous.length > 0 &&\n        previous.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleClick(playlist._id)}\n          />\n        ))}\n      {selectedTab === \"PLAYLIST\" && current && (\n        <InfoTile\n          key={`info-tile-${current._id}`}\n          title={current.name}\n          subtitle={artistsToString(current.artists)}\n          onClick={() => handleClick(current._id)}\n          selected\n        />\n      )}\n      {selectedTab === \"PLAYLIST\" &&\n        next &&\n        next.length > 0 &&\n        next.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleClick(playlist._id)}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default connector(Playlist);\n"]},"metadata":{},"sourceType":"module"}