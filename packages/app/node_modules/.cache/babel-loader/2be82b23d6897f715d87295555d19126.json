{"ast":null,"code":"const filterData = (data, searchFor) => {\n  let filteredData = data ? { ...data\n  } : data;\n\n  if (filteredData) {\n    // @ts-ignore\n    filteredData = Object.keys(filteredData).reduce((acc, curr) => {\n      let containsSearchTerm = false;\n\n      if (filteredData && filteredData[curr] && filteredData[curr].name.toLowerCase().includes(searchFor.toLowerCase())) {\n        containsSearchTerm = true;\n      } else if (filteredData && filteredData[curr] && filteredData[curr].songs) {\n        filteredData[curr].songs.forEach(song => {\n          if (song.name.toLowerCase().includes(searchFor.toLowerCase())) {\n            containsSearchTerm = true;\n          }\n        });\n      }\n\n      if (filteredData && containsSearchTerm) acc = { ...acc,\n        [curr]: filteredData[curr]\n      };\n      return acc;\n    }, {});\n    return filteredData;\n  } else {\n    return filteredData;\n  }\n};\n\nexport { filterData };","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/utils/filterData.ts"],"names":["filterData","data","searchFor","filteredData","Object","keys","reduce","acc","curr","containsSearchTerm","name","toLowerCase","includes","songs","forEach","song"],"mappings":"AAEA,MAAMA,UAAU,GAAG,CACjBC,IADiB,EAEjBC,SAFiB,KAGd;AACH,MAAIC,YAAY,GAAGF,IAAI,GAAG,EAAE,GAAGA;AAAL,GAAH,GAAiBA,IAAxC;;AACA,MAAIE,YAAJ,EAAkB;AAChB;AACAA,IAAAA,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,MAA1B,CAAiC,CAACC,GAAD,EAAUC,IAAV,KAAmB;AACjE,UAAIC,kBAAkB,GAAG,KAAzB;;AACA,UACEN,YAAY,IACZA,YAAY,CAACK,IAAD,CADZ,IAEAL,YAAY,CAACK,IAAD,CAAZ,CAAmBE,IAAnB,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CV,SAAS,CAACS,WAAV,EAA/C,CAHF,EAIE;AACAF,QAAAA,kBAAkB,GAAG,IAArB;AACD,OAND,MAMO,IACLN,YAAY,IACZA,YAAY,CAACK,IAAD,CADZ,IAEAL,YAAY,CAACK,IAAD,CAAZ,CAAmBK,KAHd,EAIL;AACAV,QAAAA,YAAY,CAACK,IAAD,CAAZ,CAAmBK,KAAnB,CAAyBC,OAAzB,CAAkCC,IAAD,IAAU;AACzC,cAAIA,IAAI,CAACL,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCV,SAAS,CAACS,WAAV,EAAjC,CAAJ,EAA+D;AAC7DF,YAAAA,kBAAkB,GAAG,IAArB;AACD;AACF,SAJD;AAKD;;AAED,UAAIN,YAAY,IAAIM,kBAApB,EACEF,GAAG,GAAG,EAAE,GAAGA,GAAL;AAAU,SAACC,IAAD,GAAQL,YAAY,CAACK,IAAD;AAA9B,OAAN;AACF,aAAOD,GAAP;AACD,KAvBc,EAuBZ,EAvBY,CAAf;AAyBA,WAAOJ,YAAP;AACD,GA5BD,MA4BO;AACL,WAAOA,YAAP;AACD;AACF,CApCD;;AAsCA,SAASH,UAAT","sourcesContent":["import { ArtistsAndAlbumsData } from \"../store/types\";\n\nconst filterData = (\n  data: ArtistsAndAlbumsData | undefined,\n  searchFor: string\n) => {\n  let filteredData = data ? { ...data } : data;\n  if (filteredData) {\n    // @ts-ignore\n    filteredData = Object.keys(filteredData).reduce((acc: {}, curr) => {\n      let containsSearchTerm = false;\n      if (\n        filteredData &&\n        filteredData[curr] &&\n        filteredData[curr].name.toLowerCase().includes(searchFor.toLowerCase())\n      ) {\n        containsSearchTerm = true;\n      } else if (\n        filteredData &&\n        filteredData[curr] &&\n        filteredData[curr].songs\n      ) {\n        filteredData[curr].songs.forEach((song) => {\n          if (song.name.toLowerCase().includes(searchFor.toLowerCase())) {\n            containsSearchTerm = true;\n          }\n        });\n      }\n\n      if (filteredData && containsSearchTerm)\n        acc = { ...acc, [curr]: filteredData[curr] };\n      return acc;\n    }, {});\n\n    return filteredData;\n  } else {\n    return filteredData;\n  }\n};\n\nexport { filterData };\n"]},"metadata":{},"sourceType":"module"}