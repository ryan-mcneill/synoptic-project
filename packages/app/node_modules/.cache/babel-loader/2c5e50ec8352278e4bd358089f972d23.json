{"ast":null,"code":"import { PLAYLIST_ADD, SET_PLAYLIST, UPDATE_PLAYLIST } from \"../types\";\nconst initialState = {\n  previous: [],\n  next: []\n};\nexport const playlist = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: action.payload.firstSong,\n        next: action.payload.nextSongs\n      };\n\n    case PLAYLIST_ADD:\n      return { ...state,\n        next: { ...state.next,\n          ...action.payload\n        }\n      };\n\n    case UPDATE_PLAYLIST:\n      return { ...action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/reducers/playlistReducers.ts"],"names":["PLAYLIST_ADD","SET_PLAYLIST","UPDATE_PLAYLIST","initialState","previous","next","playlist","state","action","type","current","payload","firstSong","nextSongs"],"mappings":"AAAA,SACEA,YADF,EAIEC,YAJF,EAKEC,eALF,QAMO,UANP;AAQA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,QAAQ,EAAE,EADwB;AAElCC,EAAAA,IAAI,EAAE;AAF4B,CAApC;AAKA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,KAAoB,GAAGJ,YADD,EAEtBK,MAFsB,KAGnB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAO;AACLG,QAAAA,QAAQ,EAAE,EADL;AAELM,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAAP,CAAeC,SAFnB;AAGLP,QAAAA,IAAI,EAAEG,MAAM,CAACG,OAAP,CAAeE;AAHhB,OAAP;;AAKF,SAAKb,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJ,aAAGG,MAAM,CAACG;AAFN;AAFD,OAAP;;AAOF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGM,MAAM,CAACG;AADL,OAAP;;AAGF;AAAS;AACP,eAAOJ,KAAP;AACD;AArBH;AAuBD,CA3BM","sourcesContent":["import {\n  PLAYLIST_ADD,\n  PlaylistActions,\n  PlaylistState,\n  SET_PLAYLIST,\n  UPDATE_PLAYLIST\n} from \"../types\";\n\nconst initialState: PlaylistState = {\n  previous: [],\n  next: []\n};\n\nexport const playlist = (\n  state: PlaylistState = initialState,\n  action: PlaylistActions\n) => {\n  switch (action.type) {\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: action.payload.firstSong,\n        next: action.payload.nextSongs\n      };\n    case PLAYLIST_ADD:\n      return {\n        ...state,\n        next: {\n          ...state.next,\n          ...action.payload\n        }\n      };\n    case UPDATE_PLAYLIST:\n      return {\n        ...action.payload\n      };\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}