{"ast":null,"code":"import axios from \"axios\";\nimport FastAverageColor from \"fast-average-color\";\nimport { SET_BACKGROUND, SET_SONG } from \"../types\";\nexport const setCurrentSong = data => ({\n  type: SET_SONG,\n  data\n});\nexport const setBackground = data => ({\n  type: SET_BACKGROUND,\n  data\n});\nexport const getBackground = ({\n  id\n}) => {\n  const face = new FastAverageColor();\n  fac.getColorAsync(\"/api/\");\n  return dispatch => {\n    axios.get(`/api/songs/${type}/${id}`).then(res => {\n      dispatch(setBackground(res.data));\n    }).catch(err => {\n      dispatch(fetchPlaylistFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/actions/currentSongActions.ts"],"names":["axios","FastAverageColor","SET_BACKGROUND","SET_SONG","setCurrentSong","data","type","setBackground","getBackground","id","face","fac","getColorAsync","dispatch","get","then","res","catch","err","fetchPlaylistFailure","message"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAGEC,cAHF,EAIEC,QAJF,QAMO,UANP;AAQA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAqC;AACjEC,EAAAA,IAAI,EAAEH,QAD2D;AAEjEE,EAAAA;AAFiE,CAArC,CAAvB;AAKP,OAAO,MAAME,aAAa,GAAIF,IAAD,KAA2C;AACtEC,EAAAA,IAAI,EAAEJ,cADgE;AAEtEG,EAAAA;AAFsE,CAA3C,CAAtB;AAKP,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA4B;AACvD,QAAMC,IAAI,GAAG,IAAIT,gBAAJ,EAAb;AAEAU,EAAAA,GAAG,CAACC,aAAJ,CAAkB,OAAlB;AACA,SAAQC,QAAD,IAAwB;AAC7Bb,IAAAA,KAAK,CACFc,GADH,CACQ,cAAaR,IAAK,IAAGG,EAAG,EADhC,EAEGM,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACN,aAAa,CAACS,GAAG,CAACX,IAAL,CAAd,CAAR;AACD,KAJH,EAKGY,KALH,CAKUC,GAAD,IAAS;AACdL,MAAAA,QAAQ,CAACM,oBAAoB,CAACD,GAAG,CAACE,OAAL,CAArB,CAAR;AACD,KAPH;AAQD,GATD;AAUD,CAdM","sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport FastAverageColor from \"fast-average-color\";\nimport {\n  Background,\n  CurrentSongActions,\n  SET_BACKGROUND,\n  SET_SONG,\n  Song\n} from \"../types\";\n\nexport const setCurrentSong = (data: Song): CurrentSongActions => ({\n  type: SET_SONG,\n  data\n});\n\nexport const setBackground = (data: Background): CurrentSongActions => ({\n  type: SET_BACKGROUND,\n  data\n});\n\nexport const getBackground = ({ id }: { id: string }) => {\n  const face = new FastAverageColor();\n\n  fac.getColorAsync(\"/api/\");\n  return (dispatch: Dispatch) => {\n    axios\n      .get(`/api/songs/${type}/${id}`)\n      .then((res) => {\n        dispatch(setBackground(res.data));\n      })\n      .catch((err) => {\n        dispatch(fetchPlaylistFailure(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}