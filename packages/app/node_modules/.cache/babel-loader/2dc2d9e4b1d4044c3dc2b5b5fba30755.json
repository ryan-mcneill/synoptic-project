{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { connect } from \"react-redux\";\nimport { setIsOpen } from \"../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = state => ({\n  albumsLoading: state.albums.loading,\n  artistsLoading: state.artists.loading,\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Menu = ({\n  albumsLoading,\n  artistsLoading,\n  isOpen,\n  setIsOpen\n}) => !albumsLoading && !artistsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    position: \"absolute\",\n    bottom: isOpen ? 0 : \"-90vh\",\n    transition: \"all 0.5s ease\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    textAlign: \"center\",\n    fontSize: \"72px\",\n    position: \"relative\",\n    left: \"50%\",\n    bottom: \"-1px\",\n    transform: \"translateX(-50%)\",\n    height: \"72px\",\n    width: \"128px\",\n    backgroundColor: \"rgba(255, 255, 255, .5)\",\n    borderRadius: \"24px 24px 0 0\",\n    backdropFilter: \"blur(20px)\"\n  },\n  onClick: () => setIsOpen(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faEllipsisH,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(Tabs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 7\n  }\n})) : /*#__PURE__*/React.createElement(React.Fragment, null);\n\nexport default connector(Menu);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx"],"names":["React","FontAwesomeIcon","faEllipsisH","Tabs","connect","setIsOpen","mapDispatchToProps","dispatch","isOpen","mapStateToProps","state","albumsLoading","albums","loading","artistsLoading","artists","menu","connector","Menu","position","bottom","transition","textAlign","fontSize","left","transform","height","width","backgroundColor","borderRadius","backdropFilter"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,SAAS,EAAGG,MAAD,IAAsBD,QAAQ,CAACF,SAAS,CAACG,MAAD,CAAV;AADmC,CAAnD,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,aAAa,EAAED,KAAK,CAACE,MAAN,CAAaC,OADa;AAEzCC,EAAAA,cAAc,EAAEJ,KAAK,CAACK,OAAN,CAAcF,OAFW;AAGzCL,EAAAA,MAAM,EAAEE,KAAK,CAACM,IAAN,CAAWR;AAHsB,CAAnB,CAAxB;;AAMA,MAAMS,SAAS,GAAGb,OAAO,CAACK,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMY,IAAwB,GAAG,CAAC;AACEP,EAAAA,aADF;AAEhCG,EAAAA,cAFgC;AAGhCN,EAAAA,MAHgC;AAIhCH,EAAAA;AAJgC,CAAD,KAM/B,CAACM,aAAD,IAAkB,CAACG,cAAnB,gBACE;AACE,EAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,MAAM,EAAEZ,MAAM,GAAG,CAAH,GAAO,OAFhB;AAGLa,IAAAA,UAAU,EAAE;AAHP,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLJ,IAAAA,QAAQ,EAAE,UAHL;AAILK,IAAAA,IAAI,EAAE,KAJD;AAKLJ,IAAAA,MAAM,EAAE,MALH;AAMLK,IAAAA,SAAS,EAAE,kBANN;AAOLC,IAAAA,MAAM,EAAE,MAPH;AAQLC,IAAAA,KAAK,EAAE,OARF;AASLC,IAAAA,eAAe,EAAE,yBATZ;AAULC,IAAAA,YAAY,EAAE,eAVT;AAWLC,IAAAA,cAAc,EAAE;AAXX,GADT;AAcE,EAAA,OAAO,EAAE,MAAMzB,SAAS,EAd1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAgBE,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEH,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBF,CAPF,eAyBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAzBF,CADF,gBA6BE,yCAnCJ;;AAsCA,eAAee,SAAS,CAACC,IAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { State } from \"../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setIsOpen } from \"../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = (state: State) => ({\n  albumsLoading: state.albums.loading,\n  artistsLoading: state.artists.loading,\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Menu: FC<PropsFromRedux> = ({\n                                    albumsLoading,\n  artistsLoading,\n  isOpen,\n  setIsOpen\n}): ReactElement =>\n  !albumsLoading && !artistsLoading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: isOpen ? 0 : \"-90vh\",\n        transition: \"all 0.5s ease\"\n      }}\n    >\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: \"72px\",\n          position: \"relative\",\n          left: \"50%\",\n          bottom: \"-1px\",\n          transform: \"translateX(-50%)\",\n          height: \"72px\",\n          width: \"128px\",\n          backgroundColor: \"rgba(255, 255, 255, .5)\",\n          borderRadius: \"24px 24px 0 0\",\n          backdropFilter: \"blur(20px)\"\n        }}\n        onClick={() => setIsOpen()}\n      >\n        <FontAwesomeIcon icon={faEllipsisH} />\n      </div>\n      <Tabs />\n    </div>\n  ) : (\n    <></>\n  );\n\nexport default connector(Menu);\n"]},"metadata":{},"sourceType":"module"}