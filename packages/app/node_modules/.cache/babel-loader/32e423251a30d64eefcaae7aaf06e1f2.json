{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faRecordVinyl, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoTile, Playlist } from \"./\";\nimport { connect } from \"react-redux\";\nimport { changeSong, fetchPlaylist, setIsOpen, setSelectedTab } from \"../../store/actions\";\nimport Albums from \"./Albums\";\nconst tabButtonStyles = {\n  height: \"8px\",\n  backgroundColor: \"black\",\n  position: \"relative\",\n  left: \"-50%\",\n  marginTop: \"8px\",\n  transition: \"all 0.5s ease\"\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSongs: (id, type) => dispatch(fetchPlaylist({\n    id,\n    type\n  })),\n  changeSong: id => dispatch(changeSong({\n    id\n  })),\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Tabs = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  setIsOpen,\n  selectedTab,\n  setSelectedTab\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"90vh\",\n      width: \"100vw\",\n      backgroundColor: \"rgba(255, 255, 255, .5)\",\n      backdropFilter: \"blur(20px)\",\n      position: \"relative\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      fontSize: \"72px\",\n      width: \"90vw\",\n      height: \"10vh\",\n      margin: \"0vh 5vw 1vh 5vw\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"PLAYLIST\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"PLAYLIST\" ? \"200%\" : 0,\n      ...tabButtonStyles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"ARTISTS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"ARTISTS\" ? \"200%\" : 0,\n      ...tabButtonStyles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"ALBUMS\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faRecordVinyl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"ALBUMS\" ? \"200%\" : 0,\n      ...tabButtonStyles\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"2vh 10vw\",\n      height: \"76vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Playlist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Albums, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), selectedTab === \"ARTISTS\" && artists && artists.length > 0 ? artists.map(artist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${artist._id}`,\n    title: artist.name,\n    onClick: () => {\n      fetchSongs(artist._id, \"artist\");\n      setSelectedTab(\"PLAYLIST\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  })) : selectedTab === \"ARTISTS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"Sorry no artists have been loaded.\")));\n};\n\nexport default connector(Tabs);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx"],"names":["React","FontAwesomeIcon","faBars","faRecordVinyl","faUsers","InfoTile","Playlist","connect","changeSong","fetchPlaylist","setIsOpen","setSelectedTab","Albums","tabButtonStyles","height","backgroundColor","position","left","marginTop","transition","mapDispatchToProps","dispatch","fetchSongs","id","type","isOpen","tab","mapStateToProps","state","playlists","playlist","data","artists","albums","selectedTab","menu","connector","Tabs","width","backdropFilter","bottom","display","alignItems","justifyContent","fontSize","margin","textAlign","length","map","artist","_id","name"],"mappings":"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","sourcesContent":["import React, { CSSProperties, FC, ReactElement } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faRecordVinyl,\n  faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoTile, Playlist } from \"./\";\nimport { State, Tabs as TabsType } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport {\n  changeSong,\n  fetchPlaylist,\n  setIsOpen,\n  setSelectedTab\n} from \"../../store/actions\";\nimport Albums from \"./Albums\";\n\nconst tabButtonStyles: CSSProperties = {\n  height: \"8px\",\n  backgroundColor: \"black\",\n  position: \"relative\",\n  left: \"-50%\",\n  marginTop: \"8px\",\n  transition: \"all 0.5s ease\"\n};\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchSongs: (id: string, type: \"album\" | \"artist\") =>\n    dispatch(fetchPlaylist({ id, type })),\n  changeSong: (id: string) => dispatch(changeSong({ id })),\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: (tab: TabsType) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Tabs: FC<PropsFromRedux> = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  setIsOpen,\n  selectedTab,\n  setSelectedTab\n}): ReactElement => {\n  return (\n    <div\n      style={{\n        height: \"90vh\",\n        width: \"100vw\",\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\n        backdropFilter: \"blur(20px)\",\n        position: \"relative\",\n        bottom: 0\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          fontSize: \"72px\",\n          width: \"90vw\",\n          height: \"10vh\",\n          margin: \"0vh 5vw 1vh 5vw\",\n          textAlign: \"center\"\n        }}\n      >\n        <div onClick={() => setSelectedTab(\"PLAYLIST\")}>\n          <FontAwesomeIcon icon={faBars} />\n          <div\n            style={{\n              width: selectedTab === \"PLAYLIST\" ? \"200%\" : 0,\n              ...tabButtonStyles\n            }}\n          />\n        </div>\n        <div onClick={() => setSelectedTab(\"ARTISTS\")}>\n          <FontAwesomeIcon icon={faUsers} />\n          <div\n            style={{\n              width: selectedTab === \"ARTISTS\" ? \"200%\" : 0,\n              ...tabButtonStyles\n            }}\n          />\n        </div>\n        <div onClick={() => setSelectedTab(\"ALBUMS\")}>\n          <FontAwesomeIcon icon={faRecordVinyl} />\n          <div\n            style={{\n              width: selectedTab === \"ALBUMS\" ? \"200%\" : 0,\n              ...tabButtonStyles\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ margin: \"2vh 10vw\", height: \"76vh\" }}>\n        <Playlist />\n        <Albums />\n        {selectedTab === \"ARTISTS\" && artists && artists.length > 0\n          ? artists.map((artist) => (\n              <InfoTile\n                key={`info-tile-${artist._id}`}\n                title={artist.name}\n                onClick={() => {\n                  fetchSongs(artist._id, \"artist\");\n                  setSelectedTab(\"PLAYLIST\");\n                }}\n              />\n            ))\n          : selectedTab === \"ARTISTS\" && (\n              <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n                Sorry no artists have been loaded.\n              </div>\n            )}\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Tabs);\n"]},"metadata":{},"sourceType":"module"}