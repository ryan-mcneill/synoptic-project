{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { connect } from \"react-redux\";\nimport { changeSong, fetchPlaylist, setIsOpen, setSelectedTab } from \"../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSongs: (id, type) => dispatch(fetchPlaylist({\n    id,\n    type\n  })),\n  changeSong: id => dispatch(changeSong({\n    id\n  })),\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Menu = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  isOpen,\n  setIsOpen\n}) => {\n  const [selected, setSelected] = useState(\"playlist\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"absolute\",\n      bottom: isOpen ? 0 : \"-90vh\",\n      transition: \"all 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"72px\",\n      position: \"relative\",\n      left: \"50%\",\n      bottom: \"-1px\",\n      transform: \"translateX(-50%)\",\n      height: \"72px\",\n      width: \"128px\",\n      backgroundColor: \"rgba(255, 255, 255, .5)\",\n      borderRadius: \"24px 24px 0 0\",\n      backdropFilter: \"blur(20px)\"\n    },\n    onClick: () => setIsOpen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEllipsisH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connector(Menu);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx"],"names":["React","useState","FontAwesomeIcon","faEllipsisH","Tabs","connect","changeSong","fetchPlaylist","setIsOpen","setSelectedTab","mapDispatchToProps","dispatch","fetchSongs","id","type","isOpen","tab","mapStateToProps","state","playlists","playlist","data","artists","albums","menu","connector","Menu","selected","setSelected","position","bottom","transition","textAlign","fontSize","left","transform","height","width","backgroundColor","borderRadius","backdropFilter"],"mappings":";AAAA,OAAOA,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAEEC,WAFF,QAKO,mCALP;AAMA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAIA,SACEC,UADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,cAJF,QAKO,kBALP;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EC,EAAAA,UAAU,EAAE,CAACC,EAAD,EAAaC,IAAb,KACVH,QAAQ,CAACJ,aAAa,CAAC;AAAEM,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,CAAd,CAFkE;AAG5ER,EAAAA,UAAU,EAAGO,EAAD,IAAgBF,QAAQ,CAACL,UAAU,CAAC;AAAEO,IAAAA;AAAF,GAAD,CAAX,CAHwC;AAI5EL,EAAAA,SAAS,EAAGO,MAAD,IAAsBJ,QAAQ,CAACH,SAAS,CAACO,MAAD,CAAV,CAJmC;AAK5EN,EAAAA,cAAc,EAAGO,GAAD,IAAmBL,QAAQ,CAACF,cAAc,CAACO,GAAD,CAAf;AALiC,CAAnD,CAA3B;;AAQA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,SAAS,EAAED,KAAK,CAACE,QAAN,CAAeC,IADe;AAEzCC,EAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,CAAcD,IAFkB;AAGzCE,EAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,CAAaF,IAHoB;AAIzCN,EAAAA,MAAM,EAAEG,KAAK,CAACM,IAAN,CAAWT;AAJsB,CAAnB,CAAxB;;AAOA,MAAMU,SAAS,GAAGpB,OAAO,CAACY,eAAD,EAAkBP,kBAAlB,CAAzB;;AAIA,MAAMgB,IAAwB,GAAG,CAAC;AAChCP,EAAAA,SADgC;AAEhCI,EAAAA,MAFgC;AAGhCD,EAAAA,OAHgC;AAIhCV,EAAAA,UAJgC;AAKhCN,EAAAA,UALgC;AAMhCS,EAAAA,MANgC;AAOhCP,EAAAA;AAPgC,CAAD,KAQb;AAClB,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,UAAD,CAAxC;AACA,sBACE;AACE,IAAA,KAAK,EAAE;AACL4B,MAAAA,QAAQ,EAAE,UADL;AAELC,MAAAA,MAAM,EAAEf,MAAM,GAAG,CAAH,GAAO,OAFhB;AAGLgB,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLJ,MAAAA,QAAQ,EAAE,UAHL;AAILK,MAAAA,IAAI,EAAE,KAJD;AAKLJ,MAAAA,MAAM,EAAE,MALH;AAMLK,MAAAA,SAAS,EAAE,kBANN;AAOLC,MAAAA,MAAM,EAAE,MAPH;AAQLC,MAAAA,KAAK,EAAE,OARF;AASLC,MAAAA,eAAe,EAAE,yBATZ;AAULC,MAAAA,YAAY,EAAE,eAVT;AAWLC,MAAAA,cAAc,EAAE;AAXX,KADT;AAcE,IAAA,OAAO,EAAE,MAAMhC,SAAS,EAd1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAPF,eAyBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AA6BD,CAvCD;;AAyCA,eAAesB,SAAS,CAACC,IAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faEllipsisH,\n  faRecordVinyl,\n  faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { State, Tabs as TabsType } from \"../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport {\n  changeSong,\n  fetchPlaylist,\n  setIsOpen,\n  setSelectedTab\n} from \"../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchSongs: (id: string, type: \"album\" | \"artist\") =>\n    dispatch(fetchPlaylist({ id, type })),\n  changeSong: (id: string) => dispatch(changeSong({ id })),\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: (tab: TabsType) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Menu: FC<PropsFromRedux> = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  isOpen,\n  setIsOpen\n}): ReactElement => {\n  const [selected, setSelected] = useState(\"playlist\");\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        bottom: isOpen ? 0 : \"-90vh\",\n        transition: \"all 0.5s ease\"\n      }}\n    >\n      <div\n        style={{\n          textAlign: \"center\",\n          fontSize: \"72px\",\n          position: \"relative\",\n          left: \"50%\",\n          bottom: \"-1px\",\n          transform: \"translateX(-50%)\",\n          height: \"72px\",\n          width: \"128px\",\n          backgroundColor: \"rgba(255, 255, 255, .5)\",\n          borderRadius: \"24px 24px 0 0\",\n          backdropFilter: \"blur(20px)\"\n        }}\n        onClick={() => setIsOpen()}\n      >\n        <FontAwesomeIcon icon={faEllipsisH} />\n      </div>\n      <Tabs />\n    </div>\n  );\n};\n\nexport default connector(Menu);\n"]},"metadata":{},"sourceType":"module"}