{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SearchTab.tsx\";\nimport React, { createRef, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport SongsTab from \"./SongsTab\";\nimport { filterData } from \"../../utils\";\n\nconst mapDispatchToProps = dispatch => ({\n  updatePlaylist: ({\n    previous,\n    current,\n    next\n  }) => dispatch(updatePlaylist({\n    previous,\n    current,\n    next\n  })),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  artists: state.artists.data,\n  albums: state.albums.data,\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst SearchTab = ({\n  artists,\n  setSelectedTab,\n  updatePlaylist,\n  albums,\n  playlists\n}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const textInput = createRef();\n  let filteredArtists;\n  let filteredAlbums;\n  let filteredPlaylists;\n  useEffect(() => {\n    if (searchTerm !== \"\") {\n      console.log(\"filtering\");\n      filteredArtists = filterData(artists, searchTerm);\n      filteredAlbums = filterData(albums, searchTerm);\n      filteredPlaylists = filterData(playlists, searchTerm);\n    }\n  }, [searchTerm]);\n\n  const handleClick = () => {\n    if (textInput.current && textInput.current.value !== searchTerm) {\n      setSearchTerm(textInput.current.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"4vh\",\n      fontSize: \"36px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: textInput,\n    type: \"text\",\n    placeholder: \"Type to search...\",\n    style: {\n      width: \"calc(100% - 8vh)\",\n      fontSize: \"36px\",\n      paddingLeft: \"2vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    style: {\n      width: \"8vh\",\n      fontSize: \"36px\"\n    },\n    value: \"Search\",\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), searchTerm === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Please type something in the search bar to begin.\") : /*#__PURE__*/React.createElement(SongsTab, {\n    artists: filteredArtists,\n    albums: filteredAlbums,\n    playlists: filteredPlaylists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default connector(SearchTab);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SearchTab.tsx"],"names":["React","createRef","useEffect","useState","connect","setSelectedTab","updatePlaylist","SongsTab","filterData","mapDispatchToProps","dispatch","previous","current","next","tab","mapStateToProps","state","artists","data","albums","playlists","connector","SearchTab","searchTerm","setSearchTerm","textInput","filteredArtists","filteredAlbums","filteredPlaylists","console","log","handleClick","value","display","height","fontSize","width","paddingLeft","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { createRef, FC, ReactElement, useEffect, useState } from \"react\";\nimport { PlaylistState, State, Tabs } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport SongsTab from \"./SongsTab\";\nimport { filterData } from \"../../utils\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  updatePlaylist: ({ previous, current, next }: PlaylistState) =>\n    dispatch(updatePlaylist({ previous, current, next })),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  artists: state.artists.data,\n  albums: state.albums.data,\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst SearchTab: FC<PropsFromRedux> = ({\n  artists,\n  setSelectedTab,\n  updatePlaylist,\n  albums,\n  playlists\n}): ReactElement => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const textInput = createRef<HTMLInputElement>();\n  let filteredArtists;\n  let filteredAlbums;\n  let filteredPlaylists;\n\n  useEffect(() => {\n    if (searchTerm !== \"\") {\n      console.log(\"filtering\")\n      filteredArtists = filterData(artists, searchTerm);\n      filteredAlbums = filterData(albums, searchTerm);\n      filteredPlaylists = filterData(playlists, searchTerm);\n    }\n  }, [searchTerm]);\n\n  const handleClick = () => {\n    if (textInput.current && textInput.current.value !== searchTerm) {\n      setSearchTerm(textInput.current.value);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ display: \"flex\", height: \"4vh\", fontSize: \"36px\" }}>\n        <input\n          ref={textInput}\n          type=\"text\"\n          placeholder=\"Type to search...\"\n          style={{\n            width: \"calc(100% - 8vh)\",\n            fontSize: \"36px\",\n            paddingLeft: \"2vw\"\n          }}\n        />\n        <input\n          type=\"button\"\n          style={{\n            width: \"8vh\",\n            fontSize: \"36px\"\n          }}\n          value=\"Search\"\n          onClick={() => handleClick()}\n        />\n      </div>\n      {searchTerm === \"\" ? (\n        <div\n          style={{ fontSize: \"48px\", textAlign: \"center\", marginTop: \"20px\" }}\n        >\n          Please type something in the search bar to begin.\n        </div>\n      ) : (\n        <SongsTab\n          artists={filteredArtists}\n          albums={filteredAlbums}\n          playlists={filteredPlaylists}\n        />\n      )}\n    </>\n  );\n};\n\nexport default connector(SearchTab);\n"]},"metadata":{},"sourceType":"module"}