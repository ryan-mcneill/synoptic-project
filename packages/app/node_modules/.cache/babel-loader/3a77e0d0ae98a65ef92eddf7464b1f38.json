{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/client/src/components/musicPlayer/Controls.tsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../../store/actions\";\nimport { MUSIC_REGISTRY } from \"../../musicRegistry\";\nimport { Button, Icon, Range } from \"react-onsenui\";\n\nconst mapState = state => ({\n  playingStatus: state.playingStatus,\n  currentlyPlaying: state.currentlyPlaying\n});\n\nconst mapDispatch = dispatch => ({\n  togglePlaying: () => dispatch(togglePlaying()),\n  changeSong: songName => dispatch(changeSong(songName))\n});\n\nconst connector = connect(mapState, mapDispatch);\n\nconst Controls = ({\n  changeSong,\n  currentlyPlaying,\n  playingStatus,\n  togglePlaying\n}) => {\n  let audioPlayer;\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n\n  const playHandler = () => {\n    var _audioPlayer, _audioPlayer$audioEl, _audioPlayer$audioEl$, _audioPlayer2, _audioPlayer2$audioEl, _audioPlayer2$audioEl2;\n\n    if (playingStatus) ((_audioPlayer = audioPlayer) === null || _audioPlayer === void 0 ? void 0 : (_audioPlayer$audioEl = _audioPlayer.audioEl) === null || _audioPlayer$audioEl === void 0 ? void 0 : (_audioPlayer$audioEl$ = _audioPlayer$audioEl.current) === null || _audioPlayer$audioEl$ === void 0 ? void 0 : _audioPlayer$audioEl$.pause) && audioPlayer.audioEl.current.pause();else ((_audioPlayer2 = audioPlayer) === null || _audioPlayer2 === void 0 ? void 0 : (_audioPlayer2$audioEl = _audioPlayer2.audioEl) === null || _audioPlayer2$audioEl === void 0 ? void 0 : (_audioPlayer2$audioEl2 = _audioPlayer2$audioEl.current) === null || _audioPlayer2$audioEl2 === void 0 ? void 0 : _audioPlayer2$audioEl2.play) && audioPlayer.audioEl.current.play();\n    togglePlaying();\n  };\n\n  const skipForwardHandler = () => {\n    console.log(currentlyPlaying); // const currentIndex = Object.keys(MUSIC_REGISTRY).findIndex((song) => {\n    //   const currentSong = (song as unknown) as typeof MUSIC_REGISTRY;\n    //   MUSIC_REGISTRY.currentSong === currentlyPlaying;\n    // });\n    // console.log(currentIndex);\n\n    changeSong(MUSIC_REGISTRY.CUTE);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"200px 20% 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"30%\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    modifier: \"quiet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: {\n      default: 24\n    },\n    icon: {\n      default: \"fa-step-backward\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"40%\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    modifier: \"quiet\",\n    onClick: playHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: {\n      default: 42\n    },\n    icon: playingStatus ? {\n      default: \"fa-pause-circle\"\n    } : {\n      default: \"fa-play-circle\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-block\",\n      width: \"30%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    modifier: \"quiet\",\n    onClick: skipForwardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    size: {\n      default: 24\n    },\n    icon: {\n      default: \"fa-step-forward\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    ref: element => audioPlayer = element,\n    src: currentlyPlaying,\n    listenInterval: 1000,\n    onListen: e => setSongTime(e),\n    onLoadedMetadata: data => {\n      var _audioPlayer3, _audioPlayer3$audioEl, _audioPlayer3$audioEl2, _audioPlayer4, _audioPlayer4$audioEl, _audioPlayer4$audioEl2;\n\n      return setSongLength(((_audioPlayer3 = audioPlayer) === null || _audioPlayer3 === void 0 ? void 0 : (_audioPlayer3$audioEl = _audioPlayer3.audioEl) === null || _audioPlayer3$audioEl === void 0 ? void 0 : (_audioPlayer3$audioEl2 = _audioPlayer3$audioEl.current) === null || _audioPlayer3$audioEl2 === void 0 ? void 0 : _audioPlayer3$audioEl2.duration) ? (_audioPlayer4 = audioPlayer) === null || _audioPlayer4 === void 0 ? void 0 : (_audioPlayer4$audioEl = _audioPlayer4.audioEl) === null || _audioPlayer4$audioEl === void 0 ? void 0 : (_audioPlayer4$audioEl2 = _audioPlayer4$audioEl.current) === null || _audioPlayer4$audioEl2 === void 0 ? void 0 : _audioPlayer4$audioEl2.duration : 1000);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Range, {\n    value: songTime,\n    onChange: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connector(Controls);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/client/src/components/musicPlayer/Controls.tsx"],"names":["React","useState","connect","ReactAudioPlayer","changeSong","togglePlaying","MUSIC_REGISTRY","Button","Icon","Range","mapState","state","playingStatus","currentlyPlaying","mapDispatch","dispatch","songName","connector","Controls","audioPlayer","songLength","setSongLength","songTime","setSongTime","playHandler","audioEl","current","pause","play","skipForwardHandler","console","log","CUTE","margin","display","width","textAlign","default","element","e","data","duration"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../../store/actions\";\nimport { State } from \"../../store/types\";\nimport { MUSIC_REGISTRY } from \"../../musicRegistry\";\nimport { Dispatch } from \"redux\";\nimport { Button, Icon, Range } from \"react-onsenui\";\n\nconst mapState = (state: State) => ({\n  playingStatus: state.playingStatus,\n  currentlyPlaying: state.currentlyPlaying\n});\n\nconst mapDispatch = (dispatch: Dispatch) => ({\n  togglePlaying: () => dispatch(togglePlaying()),\n  changeSong: (songName: MUSIC_REGISTRY) => dispatch(changeSong(songName))\n});\n\nconst connector = connect(mapState, mapDispatch);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Controls: React.FC<PropsFromRedux> = ({\n  changeSong,\n  currentlyPlaying,\n  playingStatus,\n  togglePlaying\n}): ReactElement => {\n  let audioPlayer: ReactAudioPlayer;\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n\n  const playHandler = () => {\n    if (playingStatus)\n      audioPlayer?.audioEl?.current?.pause &&\n        audioPlayer.audioEl.current.pause();\n    else\n      audioPlayer?.audioEl?.current?.play && audioPlayer.audioEl.current.play();\n\n    togglePlaying();\n  };\n\n  const skipForwardHandler = () => {\n    console.log(currentlyPlaying);\n    // const currentIndex = Object.keys(MUSIC_REGISTRY).findIndex((song) => {\n    //   const currentSong = (song as unknown) as typeof MUSIC_REGISTRY;\n    //   MUSIC_REGISTRY.currentSong === currentlyPlaying;\n    // });\n\n    // console.log(currentIndex);\n\n    changeSong(MUSIC_REGISTRY.CUTE);\n  };\n\n  return (\n    <>\n      <div style={{ margin: \"200px 20% 0\" }}>\n        <div\n          style={{ display: \"inline-block\", width: \"30%\", textAlign: \"right\" }}\n        >\n          <Button modifier=\"quiet\">\n            <Icon\n              size={{ default: 24 }}\n              icon={{ default: \"fa-step-backward\" }}\n            />\n          </Button>\n        </div>\n        <div\n          style={{ display: \"inline-block\", width: \"40%\", textAlign: \"center\" }}\n        >\n          <Button modifier=\"quiet\" onClick={playHandler}>\n            <Icon\n              size={{ default: 42 }}\n              icon={\n                playingStatus\n                  ? { default: \"fa-pause-circle\" }\n                  : { default: \"fa-play-circle\" }\n              }\n            />\n          </Button>\n        </div>\n        <div style={{ display: \"inline-block\", width: \"30%\" }}>\n          <Button modifier=\"quiet\" onClick={skipForwardHandler}>\n            <Icon\n              size={{ default: 24 }}\n              icon={{ default: \"fa-step-forward\" }}\n            />\n          </Button>\n        </div>\n      </div>\n      <ReactAudioPlayer\n        ref={(element: ReactAudioPlayer) => (audioPlayer = element)}\n        src={currentlyPlaying}\n        listenInterval={1000}\n        onListen={(e) => setSongTime(e)}\n        onLoadedMetadata={(data) =>\n          setSongLength(\n            audioPlayer?.audioEl?.current?.duration\n              ? audioPlayer?.audioEl?.current?.duration\n              : 1000\n          )\n        }\n      />\n      <Range value={songTime} onChange={e => console.log(e)} />\n    </>\n  );\n};\n\nexport default connector(Controls);\n"]},"metadata":{},"sourceType":"module"}