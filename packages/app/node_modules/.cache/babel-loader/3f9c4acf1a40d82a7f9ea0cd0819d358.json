{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongsTab.tsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport Accordion from \"./Accordion\";\nimport TabButton from \"./TabButton\";\n\nconst mapDispatchToProps = dispatch => ({\n  updatePlaylist: ({\n    previous,\n    current,\n    next\n  }) => dispatch(updatePlaylist({\n    previous,\n    current,\n    next\n  })),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  artists: state.artists.data,\n  albums: state.albums.data,\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst SongsTab = ({\n  artists,\n  setSelectedTab,\n  updatePlaylist,\n  albums,\n  playlists,\n  searchFor\n}) => {\n  const [selectedSongTab, setSelectedSongTab] = useState(\"ARTISTS\");\n\n  const handleClick = id => {\n    if (artists) {\n      const current = artists[id].songs[0];\n      const next = artists[id].songs.slice(1, artists[id].songs.length);\n      updatePlaylist({\n        previous: [],\n        current,\n        next\n      });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  const filterData = (data, searchFor) => {\n    let filteredData = data;\n\n    if (filteredData) {\n      Object.keys(data).forEach();\n    } else {\n      return data;\n    }\n  };\n\n  const artistsData = searchFor ? filterData(artists, searchFor) : artists;\n  const albumsData = searchFor ? filterData(albums, searchFor) : albums;\n  const playlistsData = searchFor ? filterData(playlists, searchFor) : playlists;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      fontSize: \"36px\",\n      width: \"100%\",\n      textAlign: \"center\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabButton, {\n    title: \"ARTISTS\",\n    onClick: () => setSelectedSongTab(\"ARTISTS\"),\n    isSelected: selectedSongTab === \"ARTISTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TabButton, {\n    title: \"ALBUMS\",\n    onClick: () => setSelectedSongTab(\"ALBUMS\"),\n    isSelected: selectedSongTab === \"ALBUMS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TabButton, {\n    title: \"PLAYLISTS\",\n    onClick: () => setSelectedSongTab(\"PLAYLISTS\"),\n    isSelected: selectedSongTab === \"PLAYLISTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), selectedSongTab === \"ARTISTS\" && artists && artists !== {} ? Object.keys(artists).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: artists[id].name,\n    data: artists[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"ARTISTS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Sorry no artists have been found.\"), selectedSongTab === \"ALBUMS\" && albums && albums !== {} ? Object.keys(albums).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: albums[id].name,\n    data: albums[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"ALBUMS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, \"Sorry no albums have been found.\"), selectedSongTab === \"PLAYLISTS\" && playlists && playlists !== {} ? Object.keys(playlists).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: playlists[id].name,\n    data: playlists[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"PLAYLISTS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Sorry no playlists have been found.\"));\n};\n\nexport default connector(SongsTab);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongsTab.tsx"],"names":["React","useState","connect","setSelectedTab","updatePlaylist","Accordion","TabButton","mapDispatchToProps","dispatch","previous","current","next","tab","mapStateToProps","state","artists","data","albums","playlists","connector","SongsTab","searchFor","selectedSongTab","setSelectedSongTab","handleClick","id","songs","slice","length","filterData","filteredData","Object","keys","forEach","artistsData","albumsData","playlistsData","display","alignItems","justifyContent","fontSize","width","textAlign","marginBottom","map","name"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport {\n  ArtistsAndAlbumsData,\n  PlaylistState,\n  State,\n  Tabs\n} from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport Accordion from \"./Accordion\";\nimport TabButton from \"./TabButton\";\n\ninterface SongsTabProps {\n  searchFor?: string;\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  updatePlaylist: ({ previous, current, next }: PlaylistState) =>\n    dispatch(updatePlaylist({ previous, current, next })),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  artists: state.artists.data,\n  albums: state.albums.data,\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst SongsTab: FC<PropsFromRedux & SongsTabProps> = ({\n  artists,\n  setSelectedTab,\n  updatePlaylist,\n  albums,\n  playlists,\n  searchFor\n}): ReactElement => {\n  const [selectedSongTab, setSelectedSongTab] = useState(\"ARTISTS\");\n  const handleClick = (id: string) => {\n    if (artists) {\n      const current = artists[id].songs[0];\n      const next = artists[id].songs.slice(1, artists[id].songs.length);\n\n      updatePlaylist({ previous: [], current, next });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  const filterData = (\n    data: ArtistsAndAlbumsData | undefined,\n    searchFor: string\n  ) => {\n    let filteredData = data;\n    if (filteredData) {\n      Object.keys(data).forEach()\n    } else {\n      return data;\n    }\n  };\n\n  const artistsData = searchFor ? filterData(artists, searchFor) : artists;\n  const albumsData = searchFor ? filterData(albums, searchFor) : albums;\n  const playlistsData = searchFor\n    ? filterData(playlists, searchFor)\n    : playlists;\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          fontSize: \"36px\",\n          width: \"100%\",\n          textAlign: \"center\",\n          marginBottom: \"20px\"\n        }}\n      >\n        <TabButton\n          title=\"ARTISTS\"\n          onClick={() => setSelectedSongTab(\"ARTISTS\")}\n          isSelected={selectedSongTab === \"ARTISTS\"}\n        />\n        <TabButton\n          title=\"ALBUMS\"\n          onClick={() => setSelectedSongTab(\"ALBUMS\")}\n          isSelected={selectedSongTab === \"ALBUMS\"}\n        />\n        <TabButton\n          title=\"PLAYLISTS\"\n          onClick={() => setSelectedSongTab(\"PLAYLISTS\")}\n          isSelected={selectedSongTab === \"PLAYLISTS\"}\n        />\n      </div>\n      {selectedSongTab === \"ARTISTS\" && artists && artists !== {}\n        ? Object.keys(artists).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={artists[id].name}\n              data={artists[id].songs}\n            />\n          ))\n        : selectedSongTab === \"ARTISTS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no artists have been found.\n            </div>\n          )}\n      {selectedSongTab === \"ALBUMS\" && albums && albums !== {}\n        ? Object.keys(albums).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={albums[id].name}\n              data={albums[id].songs}\n            />\n          ))\n        : selectedSongTab === \"ALBUMS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no albums have been found.\n            </div>\n          )}\n      {selectedSongTab === \"PLAYLISTS\" && playlists && playlists !== {}\n        ? Object.keys(playlists).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={playlists[id].name}\n              data={playlists[id].songs}\n            />\n          ))\n        : selectedSongTab === \"PLAYLISTS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no playlists have been found.\n            </div>\n          )}\n    </>\n  );\n};\n\nexport default connector(SongsTab);\n"]},"metadata":{},"sourceType":"module"}