{"ast":null,"code":"import { FETCH_SONG, FETCH_SONG_FAILURE, FETCH_SONG_SUCCESS } from \"../types\";\nconst initialState = {\n  isPlaying: false,\n  song: null,\n  albumArt: null,\n  data: {}\n};\nexport const currentSong = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SONG:\n      return state;\n\n    case FETCH_SONG_FAILURE:\n      return state;\n\n    case FETCH_SONG_SUCCESS:\n      return { ...state,\n        albumArt: action.payload.albumArt,\n        data: action.payload.data,\n        song: action.payload.song\n      };\n    // case SET_SONG:\n    //   return action;\n    // case TOGGLE_PLAYING:\n    //   return {\n    //     ...state,\n    //     isPlaying: !state.isPlaying\n    //   };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport {};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/client/src/store/reducers/currentSongReducers.ts"],"names":["FETCH_SONG","FETCH_SONG_FAILURE","FETCH_SONG_SUCCESS","initialState","isPlaying","song","albumArt","data","currentSong","state","action","type","payload"],"mappings":"AAAA,SAA8CA,UAA9C,EAA0DC,kBAA1D,EAA8EC,kBAA9E,QAAuG,UAAvG;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,QAAQ,EAAE,IAHS;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAuB,GAAGN,YADD,EAEzBO,MAFyB,KAGtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,UAAL;AACE,aAAOS,KAAP;;AACF,SAAKR,kBAAL;AACE,aAAOQ,KAAP;;AACF,SAAKP,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QAFpB;AAGLC,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL,IAHhB;AAILF,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAJhB,OAAP;AAMF;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAS;AACP,eAAOI,KAAP;AACD;AArBH;AAuBD,CA3BM;AA6BP","sourcesContent":["import {CurrentSongActions, CurrentSongState, FETCH_SONG, FETCH_SONG_FAILURE, FETCH_SONG_SUCCESS} from \"../types\";\n\nconst initialState = {\n  isPlaying: false,\n  song: null,\n  albumArt: null,\n  data: {}\n};\n\nexport const currentSong = (\n  state: CurrentSongState = initialState,\n  action: CurrentSongActions\n) => {\n  switch (action.type) {\n    case FETCH_SONG:\n      return state;\n    case FETCH_SONG_FAILURE:\n      return state;\n    case FETCH_SONG_SUCCESS:\n      return {\n        ...state,\n        albumArt: action.payload.albumArt,\n        data: action.payload.data,\n        song: action.payload.song\n      };\n    // case SET_SONG:\n    //   return action;\n    // case TOGGLE_PLAYING:\n    //   return {\n    //     ...state,\n    //     isPlaying: !state.isPlaying\n    //   };\n    default: {\n      return state;\n    }\n  }\n};\n\nexport {};\n"]},"metadata":{},"sourceType":"module"}