{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Accordion.tsx\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faChevronUp, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoTile } from \"./index\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { connect } from \"react-redux\";\n\nconst mapDispatchToProps = dispatch => ({\n  updatePlaylist: ({\n    previous,\n    current,\n    next\n  }) => dispatch(updatePlaylist({\n    previous,\n    current,\n    next\n  })),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\nconst Accordion = ({\n  updatePlaylist,\n  setSelectedTab,\n  title,\n  data\n}) => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClick = () => {\n    if (data) {\n      const current = data[0];\n      const next = data.slice(1, data.length);\n      updatePlaylist({\n        previous: [],\n        current,\n        next\n      });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: \"48px\",\n      padding: \"2vh 0\"\n    },\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"calc(100% - 42px)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"42px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: isOpen ? faChevronUp : faChevronDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlay,\n    style: {\n      marginLeft: \"8px\",\n      marginRight: \"40px\"\n    },\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), \"Play all\"), data.map(song => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${song._id}`,\n    title: song.name,\n    onClick: () => console.log(song._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default connector(Accordion);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Accordion.tsx"],"names":["React","useState","FontAwesomeIcon","faChevronDown","faChevronUp","faPlay","InfoTile","updatePlaylist","setSelectedTab","connect","mapDispatchToProps","dispatch","previous","current","next","tab","connector","Accordion","title","data","isOpen","setIsOpen","handleClick","slice","length","width","display","alignItems","fontSize","padding","marginLeft","marginRight","map","song","_id","name","console","log"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronDown,\n  faChevronUp,\n  faPlay\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { PlaylistState, Song, State, Tabs } from \"../../store/types\";\nimport { InfoTile } from \"./index\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\n\ninterface AccordionProps {\n  title: string;\n  data: Song[];\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  updatePlaylist: ({ previous, current, next }: PlaylistState) =>\n    dispatch(updatePlaylist({ previous, current, next })),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Accordion: FC<PropsFromRedux & AccordionProps> = ({\n  updatePlaylist,\n  setSelectedTab,\n  title,\n  data\n}): ReactElement => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const handleClick = () => {\n    if (data) {\n      const current = data[0];\n      const next = data.slice(1, data.length);\n\n      updatePlaylist({ previous: [], current, next });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: \"48px\",\n          padding: \"2vh 0\"\n        }}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <div style={{ width: \"calc(100% - 42px)\" }}>{title}</div>\n        <div style={{ width: \"42px\" }}>\n          <FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} />\n        </div>\n      </div>\n\n      {isOpen && (\n        <div style={{ display: \"block\" }}>\n          <div style={{ fontSize: \"48px\" }}>\n            <FontAwesomeIcon\n              icon={faPlay}\n              style={{ marginLeft: \"8px\", marginRight: \"40px\" }}\n              onClick={handleClick}\n            />\n            Play all\n          </div>\n          {data.map((song) => (\n            <InfoTile\n              key={`info-tile-${song._id}`}\n              title={song.name}\n              onClick={() => console.log(song._id)}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default connector(Accordion);\n"]},"metadata":{},"sourceType":"module"}