{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPlaylist, setSelectedTab } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSongs: (id, type) => dispatch(fetchPlaylist({\n    id,\n    type\n  })),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  artists: state.artists.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Artists = ({\n  artists,\n  fetchSongs,\n  selectedTab,\n  setSelectedTab\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default connector(Artists);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Aritsts.tsx"],"names":["React","connect","fetchPlaylist","setSelectedTab","mapDispatchToProps","dispatch","fetchSongs","id","type","tab","mapStateToProps","state","artists","data","selectedTab","menu","connector","Artists"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAGA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,qBAA9C;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EC,EAAAA,UAAU,EAAE,CAACC,EAAD,EAAaC,IAAb,KACVH,QAAQ,CAACH,aAAa,CAAC;AAAEK,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,CAAd,CAFkE;AAG5EL,EAAAA,cAAc,EAAGM,GAAD,IAAeJ,QAAQ,CAACF,cAAc,CAACM,GAAD,CAAf;AAHqC,CAAnD,CAA3B;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,CAAcC,IADkB;AAEzCC,EAAAA,WAAW,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFiB,CAAnB,CAAxB;;AAKA,MAAME,SAAS,GAAGf,OAAO,CAACS,eAAD,EAAkBN,kBAAlB,CAAzB;;AAIA,MAAMa,OAA2B,GAAG,CAAC;AACnCL,EAAAA,OADmC;AAEnCN,EAAAA,UAFmC;AAGnCQ,EAAAA,WAHmC;AAInCX,EAAAA;AAJmC,CAAD,KAKhB;AAClB,sBACE,yCADF;AAoBD,CA1BD;;AA4BA,eAAea,SAAS,CAACC,OAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State, Tabs } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { fetchPlaylist, setSelectedTab } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchSongs: (id: string, type: \"album\" | \"artist\") =>\n    dispatch(fetchPlaylist({ id, type })),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  artists: state.artists.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Artists: FC<PropsFromRedux> = ({\n  artists,\n  fetchSongs,\n  selectedTab,\n  setSelectedTab\n}): ReactElement => {\n  return (\n    <>\n      {/*{selectedTab === \"ARTISTS\" && artists && artists.length > 0*/}\n      {/*  ? artists.map((artist) => (*/}\n      {/*      <InfoTile*/}\n      {/*        key={`info-tile-${artist._id}`}*/}\n      {/*        title={artist.name}*/}\n      {/*        onClick={() => {*/}\n      {/*          fetchSongs(artist._id, \"artist\");*/}\n      {/*          setSelectedTab(\"PLAYLIST\");*/}\n      {/*        }}*/}\n      {/*      />*/}\n      {/*    ))*/}\n      {/*  : selectedTab === \"ARTISTS\" && (*/}\n      {/*      <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>*/}\n      {/*        Sorry no artists have been loaded.*/}\n      {/*      </div>*/}\n      {/*    )}*/}\n    </>\n  );\n};\n\nexport default connector(Artists);\n"]},"metadata":{},"sourceType":"module"}