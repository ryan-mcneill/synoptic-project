{"ast":null,"code":"import get from \"axios\";\nimport { FETCH_SONGS, FETCH_SONGS_FAILURE, FETCH_SONGS_SUCCESS, SET_PLAYLIST } from \"../types\";\nimport { getBackground, setCurrentSong } from \"./\";\n\nconst SetPlaylistAction = songs => ({\n  type: SET_PLAYLIST,\n  payload: songs\n});\n\nconst fetchSongsAction = () => ({\n  type: FETCH_SONGS\n});\n\nconst fetchSongsFailure = error => ({\n  type: FETCH_SONGS_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst fetchSongsSuccess = playlist => ({\n  type: FETCH_SONGS_SUCCESS,\n  payload: playlist\n});\n\nexport const fetchSongs = ({\n  id,\n  type\n}) => {\n  return dispatch => {\n    dispatch(fetchSongsAction());\n    get(`/api/songs/${type}/${id}`).then(res => {\n      dispatch(fetchSongsSuccess(res.data));\n      dispatch(setCurrentSong(res.data[0])); // @ts-ignore\n\n      dispatch(getBackground({\n        id: res.data[0].albums[0]._id\n      }));\n    }).catch(err => {\n      dispatch(fetchSongsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/actions/playlistActions.ts"],"names":["get","FETCH_SONGS","FETCH_SONGS_FAILURE","FETCH_SONGS_SUCCESS","SET_PLAYLIST","getBackground","setCurrentSong","SetPlaylistAction","songs","type","payload","fetchSongsAction","fetchSongsFailure","error","fetchSongsSuccess","playlist","fetchSongs","id","dispatch","then","res","data","albums","_id","catch","err","message"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,SACEC,WADF,EAEEC,mBAFF,EAGEC,mBAHF,EAM4CC,YAN5C,QAOO,UAPP;AAQA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,IAA9C;;AAEA,MAAMC,iBAAiD,GAAIC,KAAD,KAAY;AACpEC,EAAAA,IAAI,EAAEL,YAD8D;AAEpEM,EAAAA,OAAO,EAAEF;AAF2D,CAAZ,CAA1D;;AAKA,MAAMG,gBAAiD,GAAG,OAAO;AAC/DF,EAAAA,IAAI,EAAER;AADyD,CAAP,CAA1D;;AAIA,MAAMW,iBAAyD,GAAIC,KAAD,KAAY;AAC5EJ,EAAAA,IAAI,EAAEP,mBADsE;AAE5EQ,EAAAA,OAAO,EAAE;AAAEG,IAAAA;AAAF;AAFmE,CAAZ,CAAlE;;AAKA,MAAMC,iBAAyD,GAC7DC,QADgE,KAE5D;AACJN,EAAAA,IAAI,EAAEN,mBADF;AAEJO,EAAAA,OAAO,EAAEK;AAFL,CAF4D,CAAlE;;AAOA,OAAO,MAAMC,UAAU,GAAG,CAAC;AACzBC,EAAAA,EADyB;AAEzBR,EAAAA;AAFyB,CAAD,KAMpB;AACJ,SAAQS,QAAD,IAAwB;AAC7BA,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AAEAX,IAAAA,GAAG,CAAE,cAAaS,IAAK,IAAGQ,EAAG,EAA1B,CAAH,CACGE,IADH,CACSC,GAAD,IAAS;AACbF,MAAAA,QAAQ,CAACJ,iBAAiB,CAACM,GAAG,CAACC,IAAL,CAAlB,CAAR;AACAH,MAAAA,QAAQ,CAACZ,cAAc,CAACc,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAD,CAAf,CAAR,CAFa,CAIb;;AACAH,MAAAA,QAAQ,CAACb,aAAa,CAAC;AAAEY,QAAAA,EAAE,EAAEG,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYC,MAAZ,CAAmB,CAAnB,EAAsBC;AAA5B,OAAD,CAAd,CAAR;AACD,KAPH,EAQGC,KARH,CAQUC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAACN,iBAAiB,CAACa,GAAG,CAACC,OAAL,CAAlB,CAAR;AACD,KAVH;AAWD,GAdD;AAeD,CAtBM","sourcesContent":["import get from \"axios\";\nimport { ActionCreator, Dispatch } from \"redux\";\nimport {\n  FETCH_SONGS,\n  FETCH_SONGS_FAILURE,\n  FETCH_SONGS_SUCCESS,\n  FetchSongsAction,\n  FetchSongsFailureAction,\n  FetchSongsSuccessAction, PlaylistActions, SET_PLAYLIST\n} from \"../types\";\nimport { getBackground, setCurrentSong } from \"./\";\n\nconst SetPlaylistAction: ActionCreator<PlaylistActions> = (songs) => ({\n  type: SET_PLAYLIST,\n  payload: songs\n});\n\nconst fetchSongsAction: ActionCreator<FetchSongsAction> = () => ({\n  type: FETCH_SONGS\n});\n\nconst fetchSongsFailure: ActionCreator<FetchSongsFailureAction> = (error) => ({\n  type: FETCH_SONGS_FAILURE,\n  payload: { error }\n});\n\nconst fetchSongsSuccess: ActionCreator<FetchSongsSuccessAction> = (\n  playlist\n) => ({\n  type: FETCH_SONGS_SUCCESS,\n  payload: playlist\n});\n\nexport const fetchSongs = ({\n  id,\n  type\n}: {\n  id: string;\n  type: \"album\" | \"artist\";\n}) => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchSongsAction());\n\n    get(`/api/songs/${type}/${id}`)\n      .then((res) => {\n        dispatch(fetchSongsSuccess(res.data));\n        dispatch(setCurrentSong(res.data[0]));\n\n        // @ts-ignore\n        dispatch(getBackground({ id: res.data[0].albums[0]._id }));\n      })\n      .catch((err) => {\n        dispatch(fetchSongsFailure(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}