{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongMenu.tsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { playlistsToArray } from \"../../utils\";\nimport { addToPlaylist } from \"../../store/actions\";\nconst buttonStyles = {\n  padding: \"30px 0\",\n  textAlign: \"center\"\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addToPlaylist: ({\n    playlistId,\n    name,\n    songId\n  }) => dispatch(addToPlaylist({\n    playlistId,\n    name,\n    songId\n  }))\n});\n\nconst mapStateToProps = state => ({\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst SongMenu = ({\n  playlists,\n  addToPlaylist,\n  songName,\n  artists,\n  id\n}) => {\n  const [playlistView, setPlaylistView] = useState(true);\n  const playlistInfo = playlists ? playlistsToArray(playlists) : [];\n\n  const playlistHandler = () => {\n    setPlaylistView(true);\n  };\n\n  const handleCancel = () => {\n    setPlaylistView(false);\n  };\n\n  const handleAdd = (name, playlistId) => {\n    addToPlaylist({\n      name,\n      playlistId,\n      songId: \"5f1422054ee369215e056258\"\n    });\n    setPlaylistView(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      borderRadius: \"24px\",\n      backgroundColor: \"white\",\n      padding: \"10%\",\n      width: \"60%\",\n      minHeight: \"30%\",\n      maxHeight: \"40%\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, \"Creative Minds\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"36px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Benjamin Tissot, BenSound\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), !playlistView ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Play now\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Play next\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Add to end of queue\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonStyles,\n    onClick: playlistHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Add to playlist\")) : /*#__PURE__*/React.createElement(React.Fragment, null, playlistInfo.map(({\n    name,\n    id\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    style: buttonStyles,\n    onClick: () => handleAdd(name, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"CANCEL\",\n    style: {\n      width: \"100%\",\n      fontSize: \"36px\",\n      fontWeight: \"bolder\",\n      height: \"4vh\",\n      marginTop: \"48px\",\n      background: \"none\"\n    },\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default connector(SongMenu);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongMenu.tsx"],"names":["React","useState","connect","playlistsToArray","addToPlaylist","buttonStyles","padding","textAlign","mapDispatchToProps","dispatch","playlistId","name","songId","mapStateToProps","state","playlists","data","connector","SongMenu","songName","artists","id","playlistView","setPlaylistView","playlistInfo","playlistHandler","handleCancel","handleAdd","fontSize","position","top","left","transform","borderRadius","backgroundColor","width","minHeight","maxHeight","overflowY","map","fontWeight","height","marginTop","background"],"mappings":"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","sourcesContent":["import React, { CSSProperties, ReactElement, useState } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { playlistsToArray } from \"../../utils\";\nimport { State } from \"../../store/types\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { addToPlaylist } from \"../../store/actions\";\n\nconst buttonStyles: CSSProperties = {\n  padding: \"30px 0\",\n  textAlign: \"center\"\n};\n\ninterface SongMenuProps {\n  songName: string;\n  artists: string;\n  id: string;\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  addToPlaylist: ({\n    playlistId,\n    name,\n    songId\n  }: {\n    playlistId: string;\n    name: string;\n    songId: string;\n  }) => dispatch(addToPlaylist({ playlistId, name, songId }))\n});\n\nconst mapStateToProps = (state: State) => ({\n  playlists: state.playlists.data\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst SongMenu: React.FC<PropsFromRedux & SongMenuProps> = ({\n  playlists,\n  addToPlaylist,\n  songName,\n  artists,\n  id\n}): ReactElement => {\n  const [playlistView, setPlaylistView] = useState(true);\n  const playlistInfo = playlists ? playlistsToArray(playlists) : [];\n\n  const playlistHandler = () => {\n    setPlaylistView(true);\n  };\n\n  const handleCancel = () => {\n    setPlaylistView(false);\n  };\n\n  const handleAdd = (name: string, playlistId: string) => {\n    addToPlaylist({ name, playlistId, songId: \"5f1422054ee369215e056258\" });\n    setPlaylistView(false);\n  };\n\n  return (\n    <div\n      style={{\n        fontSize: \"48px\",\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        borderRadius: \"24px\",\n        backgroundColor: \"white\",\n        padding: \"10%\",\n        width: \"60%\",\n        minHeight: \"30%\",\n        maxHeight: \"40%\",\n        overflowY: \"scroll\"\n      }}\n    >\n      Creative Minds\n      <div style={{ fontSize: \"36px\" }}>Benjamin Tissot, BenSound</div>\n      <hr />\n      {!playlistView ? (\n        <>\n          <div style={buttonStyles}>Play now</div>\n          <div style={buttonStyles}>Play next</div>\n          <div style={buttonStyles}>Add to end of queue</div>\n          <div style={buttonStyles} onClick={playlistHandler}>\n            Add to playlist\n          </div>\n        </>\n      ) : (\n        <>\n          {playlistInfo.map(({ name, id }) => (\n            <div style={buttonStyles} onClick={() => handleAdd(name, id)}>\n              {name}\n            </div>\n          ))}\n          <input\n            type=\"button\"\n            value=\"CANCEL\"\n            style={{\n              width: \"100%\",\n              fontSize: \"36px\",\n              fontWeight: \"bolder\",\n              height: \"4vh\",\n              marginTop: \"48px\",\n              background: \"none\"\n            }}\n            onClick={handleCancel}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default connector(SongMenu);\n"]},"metadata":{},"sourceType":"module"}