{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx\";\nimport React from \"react\";\nimport { faBars, faMusic, faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { Playlist } from \"./\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { shuffleSongs } from \"../../store/actions/currentSongActions\";\nimport TabButton from \"./TabButton\";\nimport SongsTab from \"./SongsTab\";\nimport SearchTab from \"./SearchTab\";\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedTab: tab => dispatch(setSelectedTab(tab)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = state => ({\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Tabs = ({\n  shuffleSongs,\n  selectedTab,\n  setSelectedTab\n}) => {\n  const tabsData = [{\n    type: \"SEARCH\",\n    icon: faSearch\n  }, {\n    type: \"PLAYLIST\",\n    icon: faBars\n  }, {\n    type: \"SONGS\",\n    icon: faMusic\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"90vh\",\n      width: \"100vw\",\n      backgroundColor: \"rgba(255, 255, 255, .5)\",\n      backdropFilter: \"blur(20px)\",\n      position: \"relative\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      fontSize: \"72px\",\n      width: \"90vw\",\n      height: \"8vh\",\n      margin: \"0 5vw\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, tabsData.map(({\n    icon,\n    type\n  }) => /*#__PURE__*/React.createElement(TabButton, {\n    key: `tab-button-${type}`,\n    icon: icon,\n    isSelected: selectedTab === type,\n    onClick: () => setSelectedTab(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"0vh 10vw 5vh 10vw\",\n      height: \"77vh\",\n      overflow: \"hidden\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, selectedTab === \"PLAYLIST\" && /*#__PURE__*/React.createElement(Playlist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 40\n    }\n  }), selectedTab === \"SONGS\" && /*#__PURE__*/React.createElement(SongsTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }), selectedTab === \"SEARCH\" && /*#__PURE__*/React.createElement(SearchTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 38\n    }\n  })));\n};\n\nexport default connector(Tabs);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx"],"names":["React","faBars","faMusic","faSearch","Playlist","connect","setSelectedTab","shuffleSongs","TabButton","SongsTab","SearchTab","mapDispatchToProps","dispatch","tab","mapStateToProps","state","selectedTab","menu","connector","Tabs","tabsData","type","icon","height","width","backgroundColor","backdropFilter","position","bottom","display","alignItems","justifyContent","fontSize","margin","textAlign","map","overflow","overflowY"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport {faBars, faMusic, faSearch} from \"@fortawesome/free-solid-svg-icons\";\nimport { Playlist } from \"./\";\nimport { State, Tabs as TabsType } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { shuffleSongs } from \"../../store/actions/currentSongActions\";\nimport TabButton from \"./TabButton\";\nimport SongsTab from \"./SongsTab\";\nimport SearchTab from \"./SearchTab\";\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setSelectedTab: (tab: TabsType) => dispatch(setSelectedTab(tab)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = (state: State) => ({\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Tabs: FC<PropsFromRedux> = ({\n  shuffleSongs,\n  selectedTab,\n  setSelectedTab\n}): ReactElement => {\n  const tabsData = [\n    {\n      type: \"SEARCH\" as TabsType,\n      icon: faSearch\n    },\n    {\n      type: \"PLAYLIST\" as TabsType,\n      icon: faBars\n    },\n    {\n      type: \"SONGS\" as TabsType,\n      icon: faMusic\n    }\n  ];\n\n  return (\n    <div\n      style={{\n        height: \"90vh\",\n        width: \"100vw\",\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\n        backdropFilter: \"blur(20px)\",\n        position: \"relative\",\n        bottom: 0\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          fontSize: \"72px\",\n          width: \"90vw\",\n          height: \"8vh\",\n          margin: \"0 5vw\",\n          textAlign: \"center\"\n        }}\n      >\n        {tabsData.map(({ icon, type }) => (\n          <TabButton\n            key={`tab-button-${type}`}\n            icon={icon}\n            isSelected={selectedTab === type}\n            onClick={() => setSelectedTab(type)}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          margin: \"0vh 10vw 5vh 10vw\",\n          height: \"77vh\",\n          overflow: \"hidden\",\n          overflowY: \"scroll\"\n        }}\n      >\n        {selectedTab === \"PLAYLIST\" && <Playlist />}\n        {selectedTab === \"SONGS\" && <SongsTab />}\n        {selectedTab === \"SEARCH\" && <SearchTab />}\n\n        {/*<div*/}\n        {/*  style={{*/}\n        {/*    position: \"absolute\",*/}\n        {/*    bottom: \"10px\",*/}\n        {/*    right: \"200px\",*/}\n        {/*    fontSize: \"64px\"*/}\n        {/*  }}*/}\n        {/*  onClick={shuffleSongs}*/}\n        {/*>*/}\n        {/*  TOUCH ME*/}\n        {/*</div>*/}\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Tabs);\n"]},"metadata":{},"sourceType":"module"}