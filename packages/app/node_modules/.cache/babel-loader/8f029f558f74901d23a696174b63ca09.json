{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Search.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setIsOpen } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Search = ({\n  current,\n  next,\n  previous,\n  selectedTab,\n  setIsOpen\n}) => {\n  const handleClick = id => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, selectedTab === \"SEARCH\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"4vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      width: \"calc(100% - 4vh)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    style: {\n      width: \"4vh\",\n      borderTopRightRadius: \"1vh\",\n      borderBottomRightRadius: \"1vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default connector(Search);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Search.tsx"],"names":["React","connect","setIsOpen","mapDispatchToProps","dispatch","isOpen","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","Search","handleClick","id","display","height","width","borderTopRightRadius","borderBottomRightRadius"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,SAAS,EAAGG,MAAD,IAAqBD,QAAQ,CAACF,SAAS,CAACG,MAAD,CAAV;AADoC,CAAnD,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD,OADiB;AAEzCE,EAAAA,IAAI,EAAEH,KAAK,CAACE,QAAN,CAAeC,IAFoB;AAGzCC,EAAAA,QAAQ,EAAEJ,KAAK,CAACE,QAAN,CAAeE,QAHgB;AAIzCC,EAAAA,WAAW,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJiB,CAAnB,CAAxB;;AAOA,MAAME,SAAS,GAAGb,OAAO,CAACK,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMY,MAA0B,GAAG,CAAC;AAClCP,EAAAA,OADkC;AAElCE,EAAAA,IAFkC;AAGlCC,EAAAA,QAHkC;AAIlCC,EAAAA,WAJkC;AAKlCV,EAAAA;AALkC,CAAD,KAMf;AAClB,QAAMc,WAAW,GAAIC,EAAD,IAAgB;AAClCf,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,sBACE,0CACGU,WAAW,KAAK,QAAhB,iBACC;AAAK,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,oBAAoB,EAAE,KAAtC;AAA6CC,MAAAA,uBAAuB,EAAE;AAAtE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFJ,CADF;AAWD,CArBD;;AAuBA,eAAeR,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { State } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { setIsOpen } from \"../../store/actions\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setIsOpen: (isOpen: boolean) => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Search: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  selectedTab,\n  setIsOpen\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    setIsOpen(false);\n  };\n  return (\n    <>\n      {selectedTab === \"SEARCH\" && (\n        <div style={{ display: \"flex\", height: \"4vh\" }}>\n          <input type=\"text\" style={{ width: \"calc(100% - 4vh)\" }} />\n\n          <input type=\"button\" style={{ width: \"4vh\", borderTopRightRadius: \"1vh\", borderBottomRightRadius: \"1vh\" }} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default connector(Search);\n"]},"metadata":{},"sourceType":"module"}