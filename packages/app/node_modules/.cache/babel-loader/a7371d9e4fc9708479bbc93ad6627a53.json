{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport IdleTimer from \"react-idle-timer\"; // @ts-ignore TODO: create type file for this library\n\nimport { Menu, MusicPlayer, PageLoader } from \"./views\";\nimport { fetchAlbums, fetchArtists, fetchPlaylists, fetchSongs } from \"./store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAlbums: () => dispatch(fetchAlbums()),\n  fetchArtists: () => dispatch(fetchArtists()),\n  fetchPlaylists: () => dispatch(fetchPlaylists()),\n  fetchSongs: () => dispatch(fetchSongs())\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\nconst App = ({\n  fetchAlbums,\n  fetchArtists,\n  fetchPlaylists,\n  fetchSongs\n}) => {\n  const [idle, setIdle] = useState(false);\n  console.log(\"is idle: \", idle);\n  fetchAlbums();\n  fetchArtists();\n  fetchPlaylists();\n  fetchSongs();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#000000\",\n      width: \"100vw\",\n      height: \"100vh\",\n      fontFamily: \"'Work Sans', sans-serif\",\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IdleTimer, {\n    timeout: 4000,\n    onActive: () => setIdle(false),\n    onIdle: () => setIdle(true),\n    debounce: 250,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PageLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MusicPlayer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connector(App);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/App.tsx"],"names":["React","useState","connect","IdleTimer","Menu","MusicPlayer","PageLoader","fetchAlbums","fetchArtists","fetchPlaylists","fetchSongs","mapDispatchToProps","dispatch","connector","App","idle","setIdle","console","log","backgroundColor","width","height","fontFamily","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAA6BC,QAA7B,QAA4C,OAA5C;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAEA,OAAOC,SAAP,MAAsB,kBAAtB,C,CACA;;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,SAA9C;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,iBALP;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EL,EAAAA,WAAW,EAAE,MAAMK,QAAQ,CAACL,WAAW,EAAZ,CADiD;AAE5EC,EAAAA,YAAY,EAAE,MAAMI,QAAQ,CAACJ,YAAY,EAAb,CAFgD;AAG5EC,EAAAA,cAAc,EAAE,MAAMG,QAAQ,CAACH,cAAc,EAAf,CAH8C;AAI5EC,EAAAA,UAAU,EAAE,MAAME,QAAQ,CAACF,UAAU,EAAX;AAJkD,CAAnD,CAA3B;;AAOA,MAAMG,SAAS,GAAGX,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAzB;;AAIA,MAAMG,GAA6B,GAAG,CAAC;AACrCP,EAAAA,WADqC;AAErCC,EAAAA,YAFqC;AAGrCC,EAAAA,cAHqC;AAIrCC,EAAAA;AAJqC,CAAD,KAKlB;AAClB,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,IAAzB;AACAR,EAAAA,WAAW;AACXC,EAAAA,YAAY;AACZC,EAAAA,cAAc;AACdC,EAAAA,UAAU;AAEV,sBACE,uDACE;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,MAAM,EAAE,OAHH;AAILC,MAAAA,UAAU,EAAE,yBAJP;AAKLC,MAAAA,QAAQ,EAAE;AALL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,QAAQ,EAAE,MAAMP,OAAO,CAAC,KAAD,CAFzB;AAGE,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAHvB;AAIE,IAAA,QAAQ,EAAE,GAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAeE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF;AAuBD,CApCD;;AAsCA,eAAeH,SAAS,CAACC,GAAD,CAAxB","sourcesContent":["import React, {ReactElement, useState} from \"react\";\nimport { Action } from \"redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport IdleTimer from \"react-idle-timer\";\n// @ts-ignore TODO: create type file for this library\nimport { Menu, MusicPlayer, PageLoader } from \"./views\";\nimport {\n  fetchAlbums,\n  fetchArtists,\n  fetchPlaylists,\n  fetchSongs\n} from \"./store/actions\";\nimport { State } from \"./store/types\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchAlbums: () => dispatch(fetchAlbums()),\n  fetchArtists: () => dispatch(fetchArtists()),\n  fetchPlaylists: () => dispatch(fetchPlaylists()),\n  fetchSongs: () => dispatch(fetchSongs())\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst App: React.FC<PropsFromRedux> = ({\n  fetchAlbums,\n  fetchArtists,\n  fetchPlaylists,\n  fetchSongs\n}): ReactElement => {\n  const [idle, setIdle] = useState(false);\n  console.log(\"is idle: \", idle)\n  fetchAlbums();\n  fetchArtists();\n  fetchPlaylists();\n  fetchSongs();\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundColor: \"#000000\",\n          width: \"100vw\",\n          height: \"100vh\",\n          fontFamily: \"'Work Sans', sans-serif\",\n          overflow: \"hidden\"\n        }}\n      >\n        <IdleTimer\n          timeout={4000}\n          onActive={() => setIdle(false)}\n          onIdle={() => setIdle(true)}\n          debounce={250}\n        />\n        <PageLoader />\n        <MusicPlayer />\n        <Menu />\n      </div>\n    </>\n  );\n};\n\nexport default connector(App);\n"]},"metadata":{},"sourceType":"module"}