{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  updatePlaylist: ({\n    previous,\n    current,\n    next\n  }) => dispatch(updatePlaylist({\n    previous,\n    current,\n    next\n  })),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Albums = ({\n  albums,\n  selectedTab,\n  setSelectedTab,\n  updatePlaylist\n}) => {\n  const handleClick = id => {\n    if (albums) {\n      const current = albums[id].songs[0];\n      const next = albums[id].songs.slice(1, albums[id].songs.length);\n      updatePlaylist({\n        previous: [],\n        current,\n        next\n      });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default connector(Albums);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Albums.tsx"],"names":["React","connect","setSelectedTab","updatePlaylist","mapDispatchToProps","dispatch","previous","current","next","tab","mapStateToProps","state","albums","data","selectedTab","menu","connector","Albums","handleClick","id","songs","slice","length"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAGA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,qCAA/B;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,cAAc,EAAE,CAAC;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAD,KACdH,QAAQ,CAACF,cAAc,CAAC;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAD,CAAf,CAFkE;AAG5EN,EAAAA,cAAc,EAAGO,GAAD,IAAeJ,QAAQ,CAACH,cAAc,CAACO,GAAD,CAAf;AAHqC,CAAnD,CAA3B;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,IADoB;AAEzCC,EAAAA,WAAW,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFiB,CAAnB,CAAxB;;AAKA,MAAME,SAAS,GAAGf,OAAO,CAACS,eAAD,EAAkBN,kBAAlB,CAAzB;;AAIA,MAAMa,MAA0B,GAAG,CAAC;AAClCL,EAAAA,MADkC;AAElCE,EAAAA,WAFkC;AAGlCZ,EAAAA,cAHkC;AAIlCC,EAAAA;AAJkC,CAAD,KAKf;AAClB,QAAMe,WAAW,GAAIC,EAAD,IAAgB;AAClC,QAAIP,MAAJ,EAAY;AACV,YAAML,OAAO,GAAGK,MAAM,CAACO,EAAD,CAAN,CAAWC,KAAX,CAAiB,CAAjB,CAAhB;AACA,YAAMZ,IAAI,GAAGI,MAAM,CAACO,EAAD,CAAN,CAAWC,KAAX,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BT,MAAM,CAACO,EAAD,CAAN,CAAWC,KAAX,CAAiBE,MAA3C,CAAb;AAEAnB,MAAAA,cAAc,CAAC;AAAEG,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,OAAD,CAAd;AACAN,MAAAA,cAAc,CAAC,UAAD,CAAd;AACD;AACF,GARD;;AAUA,sBACE,yCADF;AAiBD,CAjCD;;AAmCA,eAAec,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { PlaylistState, State, Tabs } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { updatePlaylist } from \"../../store/actions/playlistActions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  updatePlaylist: ({ previous, current, next }: PlaylistState) =>\n    dispatch(updatePlaylist({ previous, current, next })),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Albums: FC<PropsFromRedux> = ({\n  albums,\n  selectedTab,\n  setSelectedTab,\n  updatePlaylist\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    if (albums) {\n      const current = albums[id].songs[0];\n      const next = albums[id].songs.slice(1, albums[id].songs.length);\n\n      updatePlaylist({ previous: [], current, next });\n      setSelectedTab(\"PLAYLIST\");\n    }\n  };\n\n  return (\n    <>\n      {/*{selectedTab === \"ALBUMS\" && albums && albums !== {}*/}\n      {/*  ? Object.keys(albums).map((id) => (*/}\n      {/*      <InfoTile*/}\n      {/*        key={`info-tile-${id}`}*/}\n      {/*        title={albums[id].name}*/}\n      {/*        onClick={() => handleClick(id)}*/}\n      {/*      />*/}\n      {/*    ))*/}\n      {/*  : selectedTab === \"ALBUMS\" && (*/}\n      {/*      <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>*/}\n      {/*        Sorry no albums have been loaded.*/}\n      {/*      </div>*/}\n      {/*    )}*/}\n    </>\n  );\n};\n\nexport default connector(Albums);\n"]},"metadata":{},"sourceType":"module"}