{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { connect } from \"react-redux\";\nimport { setIsOpen } from \"../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = state => ({\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Menu = ({\n  isOpen,\n  setIsOpen\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    position: \"absolute\",\n    bottom: isOpen ? 0 : \"-90vh\",\n    transition: \"all 0.5s ease\"\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    textAlign: \"center\",\n    fontSize: \"72px\",\n    position: \"relative\",\n    left: \"50%\",\n    bottom: \"-1px\",\n    transform: \"translateX(-50%)\",\n    height: \"72px\",\n    width: \"128px\",\n    backgroundColor: \"rgba(255, 255, 255, .5)\",\n    borderRadius: \"24px 24px 0 0\",\n    backdropFilter: \"blur(20px)\"\n  },\n  onClick: () => setIsOpen(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n  icon: faEllipsisH,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n})), /*#__PURE__*/React.createElement(Tabs, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}));\n\nexport default connector(Menu);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/views/Menu.tsx"],"names":["React","FontAwesomeIcon","faEllipsisH","Tabs","connect","setIsOpen","mapDispatchToProps","dispatch","isOpen","mapStateToProps","state","menu","connector","Menu","position","bottom","transition","textAlign","fontSize","left","transform","height","width","backgroundColor","borderRadius","backdropFilter"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,SAAS,EAAGG,MAAD,IAAsBD,QAAQ,CAACF,SAAS,CAACG,MAAD,CAAV;AADmC,CAAnD,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADsB,CAAnB,CAAxB;;AAIA,MAAMI,SAAS,GAAGR,OAAO,CAACK,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMO,IAAwB,GAAG,CAAC;AAAEL,EAAAA,MAAF;AAAUH,EAAAA;AAAV,CAAD,kBAC/B;AACE,EAAA,KAAK,EAAE;AACLS,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,MAAM,EAAEP,MAAM,GAAG,CAAH,GAAO,OAFhB;AAGLQ,IAAAA,UAAU,EAAE;AAHP,GADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOE;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,QAAQ,EAAE,MAFL;AAGLJ,IAAAA,QAAQ,EAAE,UAHL;AAILK,IAAAA,IAAI,EAAE,KAJD;AAKLJ,IAAAA,MAAM,EAAE,MALH;AAMLK,IAAAA,SAAS,EAAE,kBANN;AAOLC,IAAAA,MAAM,EAAE,MAPH;AAQLC,IAAAA,KAAK,EAAE,OARF;AASLC,IAAAA,eAAe,EAAE,yBATZ;AAULC,IAAAA,YAAY,EAAE,eAVT;AAWLC,IAAAA,cAAc,EAAE;AAXX,GADT;AAcE,EAAA,OAAO,EAAE,MAAMpB,SAAS,EAd1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAgBE,oBAAC,eAAD;AAAiB,EAAA,IAAI,EAAEH,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBF,CAPF,eAyBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAzBF,CADF;;AA8BA,eAAeU,SAAS,CAACC,IAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tabs } from \"../components/Menu\";\nimport { State } from \"../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setIsOpen } from \"../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = (state: State) => ({\n  isOpen: state.menu.isOpen\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Menu: FC<PropsFromRedux> = ({ isOpen, setIsOpen }): ReactElement => (\n  <div\n    style={{\n      position: \"absolute\",\n      bottom: isOpen ? 0 : \"-90vh\",\n      transition: \"all 0.5s ease\"\n    }}\n  >\n    <div\n      style={{\n        textAlign: \"center\",\n        fontSize: \"72px\",\n        position: \"relative\",\n        left: \"50%\",\n        bottom: \"-1px\",\n        transform: \"translateX(-50%)\",\n        height: \"72px\",\n        width: \"128px\",\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\n        borderRadius: \"24px 24px 0 0\",\n        backdropFilter: \"blur(20px)\"\n      }}\n      onClick={() => setIsOpen()}\n    >\n      <FontAwesomeIcon icon={faEllipsisH} />\n    </div>\n    <Tabs />\n  </div>\n);\n\nexport default connector(Menu);\n"]},"metadata":{},"sourceType":"module"}