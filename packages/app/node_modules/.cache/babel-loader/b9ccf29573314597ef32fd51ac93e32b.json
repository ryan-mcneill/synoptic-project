{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/MusicPlayer/NowPlaying.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\n\nconst mapStateToProps = state => {\n  var _state$playlist$curre, _state$playlist$curre2;\n\n  return {\n    artists: (_state$playlist$curre = state.playlist.current) === null || _state$playlist$curre === void 0 ? void 0 : _state$playlist$curre.artists,\n    songName: (_state$playlist$curre2 = state.playlist.current) === null || _state$playlist$curre2 === void 0 ? void 0 : _state$playlist$curre2.name\n  };\n};\n\nconst connector = connect(mapStateToProps);\n\nconst NowPlaying = ({\n  artists = [{\n    name: \"Unknown Artist\"\n  }],\n  songName = \"Unknown\"\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"5vh\",\n      width: \"90vw\",\n      textAlign: \"center\",\n      padding: \"5vh 5vw 2vh 5vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"24px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, data ? \"NOW PLAYING\" : \"NOTHING PLAYING\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, data ? `${songName} - ${artistsToString(artists)}` : \"Please make a song selection\"));\n};\n\nexport default connector(NowPlaying);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/MusicPlayer/NowPlaying.tsx"],"names":["React","connect","artistsToString","mapStateToProps","state","artists","playlist","current","songName","name","connector","NowPlaying","height","width","textAlign","padding","fontSize","data","whiteSpace","overflow","textOverflow"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,eAAT,QAAgC,aAAhC;;AAEA,MAAMC,eAAe,GAAIC,KAAD;AAAA;;AAAA,SAAmB;AACzCC,IAAAA,OAAO,2BAAED,KAAK,CAACE,QAAN,CAAeC,OAAjB,0DAAE,sBAAwBF,OADQ;AAEzCG,IAAAA,QAAQ,4BAAEJ,KAAK,CAACE,QAAN,CAAeC,OAAjB,2DAAE,uBAAwBE;AAFO,GAAnB;AAAA,CAAxB;;AAKA,MAAMC,SAAS,GAAGT,OAAO,CAACE,eAAD,CAAzB;;AAIA,MAAMQ,UAAoC,GAAG,CAAC;AAC5CN,EAAAA,OAAO,GAAG,CAAC;AAAEI,IAAAA,IAAI,EAAE;AAAR,GAAD,CADkC;AAE5CD,EAAAA,QAAQ,GAAG;AAFiC,CAAD,KAGzB;AAClB,sBACE;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,SAAS,EAAE,QAHN;AAILC,MAAAA,OAAO,EAAE;AAJJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,GAAG,aAAH,GAAmB,iBAD1B,CARF,eAWE;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,QAAQ,EAAE,MADL;AAELE,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,QAAQ,EAAE,QAHL;AAILC,MAAAA,YAAY,EAAE;AAJT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGH,IAAI,GACA,GAAET,QAAS,MAAKN,eAAe,CAACG,OAAD,CAAU,EADzC,GAED,8BAVN,CAXF,CADF;AA0BD,CA9BD;;AAgCA,eAAeK,SAAS,CAACC,UAAD,CAAxB","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { State } from \"../../store/types\";\nimport { artistsToString } from \"../../utils\";\n\nconst mapStateToProps = (state: State) => ({\n  artists: state.playlist.current?.artists,\n  songName: state.playlist.current?.name\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst NowPlaying: React.FC<PropsFromRedux> = ({\n  artists = [{ name: \"Unknown Artist\" }],\n  songName = \"Unknown\"\n}): ReactElement => {\n  return (\n    <div\n      style={{\n        height: \"5vh\",\n        width: \"90vw\",\n        textAlign: \"center\",\n        padding: \"5vh 5vw 2vh 5vw\"\n      }}\n    >\n      <div style={{ fontSize: \"24px\" }}>\n        {data ? \"NOW PLAYING\" : \"NOTHING PLAYING\"}\n      </div>\n      <div\n        style={{\n          fontSize: \"48px\",\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        {data\n          ? `${songName} - ${artistsToString(artists)}`\n          : \"Please make a song selection\"}\n      </div>\n    </div>\n  );\n};\n\nexport default connector(NowPlaying);\n"]},"metadata":{},"sourceType":"module"}