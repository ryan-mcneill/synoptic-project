{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Controls.tsx\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause, faPlay, faStepBackward, faStepForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  togglePlaying: playing => dispatch(togglePlaying(playing)),\n  changeSong: type => dispatch(changeSong(type))\n});\n\nconst mapStateToProps = state => {\n  var _state$currentSong$da;\n\n  return {\n    isPlaying: state.currentSong.isPlaying,\n    songId: (_state$currentSong$da = state.currentSong.data) === null || _state$currentSong$da === void 0 ? void 0 : _state$currentSong$da._id\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Controls = ({\n  isPlaying,\n  changeSong,\n  songId,\n  togglePlaying\n}) => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  let audioPlayer;\n\n  const onSongLoad = data => {\n    var _audioPlayer, _audioPlayer$audioEl;\n\n    if ((_audioPlayer = audioPlayer) === null || _audioPlayer === void 0 ? void 0 : (_audioPlayer$audioEl = _audioPlayer.audioEl) === null || _audioPlayer$audioEl === void 0 ? void 0 : _audioPlayer$audioEl.current) {\n      setSongLength(audioPlayer.audioEl.current.duration);\n      console.log(audioPlayer.audioEl.current);\n    }\n  };\n\n  const getLengthInMinutes = () => {\n    const tempDate = new Date(Math.round(songLength) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n    return minutes.toString().padStart(2, \"0\") + \":\" + seconds.toString().padStart(2, \"0\");\n  };\n\n  const playStatusHandler = () => {\n    var _audioPlayer2, _audioPlayer2$audioEl;\n\n    if ((_audioPlayer2 = audioPlayer) === null || _audioPlayer2 === void 0 ? void 0 : (_audioPlayer2$audioEl = _audioPlayer2.audioEl) === null || _audioPlayer2$audioEl === void 0 ? void 0 : _audioPlayer2$audioEl.current) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"10%\",\n      width: \"90%\",\n      position: \"absolute\",\n      bottom: 0,\n      padding: \"4% 5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    ref: element => audioPlayer = element,\n    src: songId ? `/api/song/${songId}` : \"\",\n    listenInterval: 1000,\n    onListen: e => setSongTime(e),\n    onLoadedMetadata: data => onSongLoad(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => changeSong(\"PREV\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepBackward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"96px\",\n      margin: \"0 96px\"\n    },\n    onClick: playStatusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: isPlaying ? faPause : faPlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => changeSong(\"NEXT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: \"48px\",\n      fontSize: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"00:00\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    style: {\n      width: \"100%\",\n      margin: \"0 24px\"\n    },\n    min: \"0\",\n    max: songLength,\n    value: songTime,\n    onChange: () => {},\n    onAbort: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, getLengthInMinutes())));\n};\n\nexport default connector(Controls);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Controls.tsx"],"names":["React","useState","FontAwesomeIcon","faPause","faPlay","faStepBackward","faStepForward","connect","ReactAudioPlayer","changeSong","togglePlaying","mapDispatchToProps","dispatch","playing","type","mapStateToProps","state","isPlaying","currentSong","songId","data","_id","connector","Controls","songLength","setSongLength","songTime","setSongTime","audioPlayer","onSongLoad","audioEl","current","duration","console","log","getLengthInMinutes","tempDate","Date","Math","round","minutes","getMinutes","seconds","getSeconds","toString","padStart","playStatusHandler","height","width","position","bottom","padding","element","e","display","alignItems","justifyContent","fontSize","margin","marginTop"],"mappings":"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","sourcesContent":["import React, { ReactElement, SyntheticEvent, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPause,\n  faPlay,\n  faStepBackward,\n  faStepForward\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ChangeSong, State } from \"../store/types\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  togglePlaying: (playing?: boolean) => dispatch(togglePlaying(playing)),\n  changeSong: (type: ChangeSong) => dispatch(changeSong(type))\n});\n\nconst mapStateToProps = (state: State) => ({\n  isPlaying: state.currentSong.isPlaying,\n  songId: state.currentSong.data?._id\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Controls: React.FC<PropsFromRedux> = ({\n  isPlaying,\n  changeSong,\n  songId,\n  togglePlaying\n}): ReactElement => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  let audioPlayer: ReactAudioPlayer;\n\n  const onSongLoad = (data: SyntheticEvent<HTMLAudioElement, Event>) => {\n    if (audioPlayer?.audioEl?.current) {\n      setSongLength(audioPlayer.audioEl.current.duration);\n      console.log(audioPlayer.audioEl.current)\n    }\n  };\n\n  const getLengthInMinutes = (): string => {\n    const tempDate = new Date(Math.round(songLength) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n\n    return (\n      minutes.toString().padStart(2, \"0\") +\n      \":\" +\n      seconds.toString().padStart(2, \"0\")\n    );\n  };\n\n  const playStatusHandler = () => {\n    if (audioPlayer?.audioEl?.current) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        height: \"10%\",\n        width: \"90%\",\n        position: \"absolute\",\n        bottom: 0,\n        padding: \"4% 5%\"\n      }}\n    >\n      <ReactAudioPlayer\n        ref={(element: ReactAudioPlayer) => (audioPlayer = element)}\n        src={songId ? `/api/song/${songId}` : \"\"}\n        listenInterval={1000}\n        onListen={(e) => setSongTime(e)}\n        onLoadedMetadata={(data) => onSongLoad(data)}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div style={{ fontSize: \"48px\" }} onClick={() => changeSong(\"PREV\")}>\n          <FontAwesomeIcon icon={faStepBackward} />\n        </div>\n        <div\n          style={{ fontSize: \"96px\", margin: \"0 96px\" }}\n          onClick={playStatusHandler}\n        >\n          <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n        </div>\n        <div style={{ fontSize: \"48px\" }} onClick={() => changeSong(\"NEXT\")}>\n          <FontAwesomeIcon icon={faStepForward} />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: \"48px\",\n          fontSize: \"32px\"\n        }}\n      >\n        <div>00:00</div>\n        <input\n          type=\"range\"\n          style={{ width: \"100%\", margin: \"0 24px\" }}\n          min=\"0\"\n          max={songLength}\n          value={songTime}\n          onChange={() => {}}\n          onAbort={e => console.log(e)}\n        />\n        <div>{getLengthInMinutes()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Controls);\n"]},"metadata":{},"sourceType":"module"}