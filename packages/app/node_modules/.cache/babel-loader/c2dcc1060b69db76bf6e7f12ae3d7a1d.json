{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faRecordVinyl, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoTile } from \"./\";\nimport { connect } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { changeSong, fetchPlaylist, setIsOpen, setSelectedTab } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSongs: (id, type) => dispatch(fetchPlaylist({\n    id,\n    type\n  })),\n  changeSong: id => dispatch(changeSong({\n    id\n  })),\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Tabs = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  setIsOpen,\n  selectedTab,\n  setSelectedTab\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"90vh\",\n      width: \"100vw\",\n      backgroundColor: \"rgba(255, 255, 255, .5)\",\n      backdropFilter: \"blur(20px)\",\n      position: \"relative\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      fontSize: \"72px\",\n      width: \"90vw\",\n      height: \"10vh\",\n      margin: \"0vh 5vw 1vh 5vw\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"playlist\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBars,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"playlist\" ? \"200%\" : 0,\n      height: \"8px\",\n      backgroundColor: \"black\",\n      position: \"relative\",\n      left: \"-50%\",\n      marginTop: \"8px\",\n      transition: \"all 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"artists\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"artists\" ? \"200%\" : 0,\n      height: \"8px\",\n      backgroundColor: \"black\",\n      position: \"relative\",\n      left: \"-50%\",\n      marginTop: \"8px\",\n      transition: \"all 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(\"albums\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faRecordVinyl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === \"albums\" ? \"200%\" : 0,\n      height: \"8px\",\n      backgroundColor: \"black\",\n      position: \"relative\",\n      left: \"-50%\",\n      marginTop: \"8px\",\n      transition: \"all 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"2vh 10vw\",\n      height: \"76vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, selectedTab === \"playlist\" && playlists && playlists.length > 0 ? playlists.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => {\n      changeSong(playlist._id);\n      setIsOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })) : selectedTab === \"playlist\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, \"There are no song playlists currently selected.\"), selectedTab === \"albums\" && albums && albums.length > 0 ? albums.map(album => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${album._id}`,\n    title: album.name,\n    onClick: () => {\n      fetchSongs(album._id, \"album\");\n      setSelectedTab(\"playlist\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  })) : selectedTab === \"albums\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Sorry no albums have been loaded.\"), selectedTab === \"artists\" && artists && artists.length > 0 ? artists.map(artist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${artist._id}`,\n    title: artist.name,\n    onClick: () => {\n      fetchSongs(artist._id, \"artist\");\n      setSelectedTab(\"playlist\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  })) : selectedTab === \"artists\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Sorry no artists have been loaded.\")));\n};\n\nexport default connector(Tabs);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Tabs.tsx"],"names":["React","FontAwesomeIcon","faBars","faRecordVinyl","faUsers","InfoTile","connect","artistsToString","changeSong","fetchPlaylist","setIsOpen","setSelectedTab","mapDispatchToProps","dispatch","fetchSongs","id","type","isOpen","tab","mapStateToProps","state","playlists","playlist","data","artists","albums","selectedTab","menu","connector","Tabs","height","width","backgroundColor","backdropFilter","position","bottom","display","alignItems","justifyContent","fontSize","margin","textAlign","left","marginTop","transition","length","map","_id","name","album","artist"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBars,\n  faRecordVinyl,\n  faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InfoTile } from \"./\";\nimport { State, Tabs as TabsType } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport {\n  changeSong,\n  fetchPlaylist,\n  setIsOpen,\n  setSelectedTab\n} from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchSongs: (id: string, type: \"album\" | \"artist\") =>\n    dispatch(fetchPlaylist({ id, type })),\n  changeSong: (id: string) => dispatch(changeSong({ id })),\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen)),\n  setSelectedTab: (tab: TabsType) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  playlists: state.playlist.data,\n  artists: state.artists.data,\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Tabs: FC<PropsFromRedux> = ({\n  playlists,\n  albums,\n  artists,\n  fetchSongs,\n  changeSong,\n  setIsOpen,\n  selectedTab,\n  setSelectedTab\n}): ReactElement => {\n  \n  return (\n    <div\n      style={{\n        height: \"90vh\",\n        width: \"100vw\",\n        backgroundColor: \"rgba(255, 255, 255, .5)\",\n        backdropFilter: \"blur(20px)\",\n        position: \"relative\",\n        bottom: 0\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          fontSize: \"72px\",\n          width: \"90vw\",\n          height: \"10vh\",\n          margin: \"0vh 5vw 1vh 5vw\",\n          textAlign: \"center\"\n        }}\n      >\n        <div onClick={() => setSelectedTab(\"playlist\")}>\n          <FontAwesomeIcon icon={faBars} />\n          <div\n            style={{\n              width: selectedTab === \"playlist\" ? \"200%\" : 0,\n              height: \"8px\",\n              backgroundColor: \"black\",\n              position: \"relative\",\n              left: \"-50%\",\n              marginTop: \"8px\",\n              transition: \"all 0.5s ease\"\n            }}\n          />\n        </div>\n        <div onClick={() => setSelectedTab(\"artists\")}>\n          <FontAwesomeIcon icon={faUsers} />\n          <div\n            style={{\n              width: selectedTab === \"artists\" ? \"200%\" : 0,\n              height: \"8px\",\n              backgroundColor: \"black\",\n              position: \"relative\",\n              left: \"-50%\",\n              marginTop: \"8px\",\n              transition: \"all 0.5s ease\"\n            }}\n          />\n        </div>\n        <div onClick={() => setSelectedTab(\"albums\")}>\n          <FontAwesomeIcon icon={faRecordVinyl} />\n          <div\n            style={{\n              width: selectedTab === \"albums\" ? \"200%\" : 0,\n              height: \"8px\",\n              backgroundColor: \"black\",\n              position: \"relative\",\n              left: \"-50%\",\n              marginTop: \"8px\",\n              transition: \"all 0.5s ease\"\n            }}\n          />\n        </div>\n      </div>\n      <div style={{ margin: \"2vh 10vw\", height: \"76vh\" }}>\n        {selectedTab === \"playlist\" && playlists && playlists.length > 0\n          ? playlists.map((playlist) => (\n              <InfoTile\n                key={`info-tile-${playlist._id}`}\n                title={playlist.name}\n                subtitle={artistsToString(playlist.artists)}\n                onClick={() => {\n                  changeSong(playlist._id);\n                  setIsOpen(false);\n                }}\n              />\n            ))\n          : selectedTab === \"playlist\" && (\n              <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n                There are no song playlists currently selected.\n              </div>\n            )}\n        {selectedTab === \"albums\" && albums && albums.length > 0\n          ? albums.map((album) => (\n              <InfoTile\n                key={`info-tile-${album._id}`}\n                title={album.name}\n                onClick={() => {\n                  fetchSongs(album._id, \"album\");\n                  setSelectedTab(\"playlist\");\n                }}\n              />\n            ))\n          : selectedTab === \"albums\" && (\n              <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n                Sorry no albums have been loaded.\n              </div>\n            )}\n        {selectedTab === \"artists\" && artists && artists.length > 0\n          ? artists.map((artist) => (\n              <InfoTile\n                key={`info-tile-${artist._id}`}\n                title={artist.name}\n                onClick={() => {\n                  fetchSongs(artist._id, \"artist\");\n                  setSelectedTab(\"playlist\");\n                }}\n              />\n            ))\n          : selectedTab === \"artists\" && (\n              <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n                Sorry no artists have been loaded.\n              </div>\n            )}\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Tabs);\n"]},"metadata":{},"sourceType":"module"}