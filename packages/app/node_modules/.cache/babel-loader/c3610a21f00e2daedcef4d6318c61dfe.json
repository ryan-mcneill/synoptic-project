{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeSong } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  changeSong: id => dispatch(changeSong({\n    id\n  }))\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Playlist = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}) => {\n  const handleClick = id => {// changeSong(playlist._id);\n    // setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default connector(Playlist);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx"],"names":["React","connect","changeSong","mapDispatchToProps","dispatch","id","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","Playlist","handleClick"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAGA,SAASC,OAAT,QAAwC,aAAxC;AAIA,SAASC,UAAT,QAAsC,qBAAtC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,UAAU,EAAGG,EAAD,IAAgBD,QAAQ,CAACF,UAAU,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAX;AADwC,CAAnD,CAA3B;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD,OADiB;AAEzCE,EAAAA,IAAI,EAAEH,KAAK,CAACE,QAAN,CAAeC,IAFoB;AAGzCC,EAAAA,QAAQ,EAAEJ,KAAK,CAACE,QAAN,CAAeE,QAHgB;AAIzCC,EAAAA,WAAW,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJiB,CAAnB,CAAxB;;AAOA,MAAME,SAAS,GAAGb,OAAO,CAACK,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMY,QAA4B,GAAG,CAAC;AACpCP,EAAAA,OADoC;AAEpCE,EAAAA,IAFoC;AAGpCC,EAAAA,QAHoC;AAIpCC,EAAAA;AAJoC,CAAD,KAKjB;AAClB,QAAMI,WAAW,GAAIX,EAAD,IAAgB,CAClC;AACA;AACD,GAHD;;AAIA,sBACE,yCADF;AAkBD,CA5BD;;AA8BA,eAAeS,SAAS,CAACC,QAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { changeSong, setIsOpen } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  changeSong: (id: string) => dispatch(changeSong({ id }))\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Playlist: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  selectedTab\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    // changeSong(playlist._id);\n    // setIsOpen(false);\n  };\n  return (\n    <>\n      {/*{selectedTab === \"PLAYLIST\" && current && current.length > 0*/}\n      {/*  ? current.map((playlist) => (*/}\n      {/*      <InfoTile*/}\n      {/*        key={`info-tile-${playlist._id}`}*/}\n      {/*        title={playlist.name}*/}\n      {/*        subtitle={artistsToString(playlist.artists)}*/}\n      {/*        onClick={() => handleClick()}*/}\n      {/*      />*/}\n      {/*    ))*/}\n      {/*  : selectedTab === \"PLAYLIST\" && (*/}\n      {/*      <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>*/}\n      {/*        There are no song playlists currently selected.*/}\n      {/*      </div>*/}\n      {/*    )}*/}\n    </>\n  );\n};\n\nexport default connector(Playlist);\n"]},"metadata":{},"sourceType":"module"}