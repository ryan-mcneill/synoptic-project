{"ast":null,"code":"import { FETCH_SONGS, FETCH_SONGS_FAILURE, FETCH_SONGS_SUCCESS, PLAYLIST_ADD, SET_PLAYLIST, UPDATE_PLAYLIST } from \"../types\";\nconst initialState = {\n  next: []\n};\nexport const playlist = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SONGS:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_SONGS_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    case FETCH_SONGS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: action.payload.firstSong,\n        next: action.payload.nextSongs\n      };\n\n    case PLAYLIST_ADD:\n      return { ...state,\n        next: { ...state.next,\n          ...action.payload\n        }\n      };\n\n    case UPDATE_PLAYLIST:\n      return { ...action.payload\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/reducers/playlistReducers.ts"],"names":["FETCH_SONGS","FETCH_SONGS_FAILURE","FETCH_SONGS_SUCCESS","PLAYLIST_ADD","SET_PLAYLIST","UPDATE_PLAYLIST","initialState","next","playlist","state","action","type","loading","error","payload","data","previous","current","firstSong","nextSongs"],"mappings":"AAAA,SACEA,WADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,YAJF,EAOEC,YAPF,EAQEC,eARF,QASO,UATP;AAWA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAApC;AAIA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,KAAoB,GAAGH,YADD,EAEtBI,MAFsB,KAGnB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAHjB,OAAP;;AAKF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILE,QAAAA,IAAI,EAAEL,MAAM,CAACI;AAJR,OAAP;;AAMF,SAAKV,YAAL;AACE,aAAO;AACLY,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,OAAO,EAAEP,MAAM,CAACI,OAAP,CAAeI,SAFnB;AAGLX,QAAAA,IAAI,EAAEG,MAAM,CAACI,OAAP,CAAeK;AAHhB,OAAP;;AAKF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJ,aAAGG,MAAM,CAACI;AAFN;AAFD,OAAP;;AAOF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGK,MAAM,CAACI;AADL,OAAP;;AAGF;AAAS;AACP,eAAOL,KAAP;AACD;AAvCH;AAyCD,CA7CM","sourcesContent":["import {\n  FETCH_SONGS,\n  FETCH_SONGS_FAILURE,\n  FETCH_SONGS_SUCCESS,\n  PLAYLIST_ADD,\n  PlaylistActions,\n  PlaylistState,\n  SET_PLAYLIST,\n  UPDATE_PLAYLIST\n} from \"../types\";\n\nconst initialState: PlaylistState = {\n  next: []\n};\n\nexport const playlist = (\n  state: PlaylistState = initialState,\n  action: PlaylistActions\n) => {\n  switch (action.type) {\n    case FETCH_SONGS:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_SONGS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    case FETCH_SONGS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: action.payload.firstSong,\n        next: action.payload.nextSongs\n      };\n    case PLAYLIST_ADD:\n      return {\n        ...state,\n        next: {\n          ...state.next,\n          ...action.payload\n        }\n      };\n    case UPDATE_PLAYLIST:\n      return {\n        ...action.payload\n      };\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}