{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/views/MusicPlayer.tsx\";\nimport React from \"react\";\nimport { fetchPlaylist } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { AlbumArt, Controls, NowPlaying } from \"../components\";\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPlaylist: ({\n    id,\n    type\n  }) => dispatch(fetchPlaylist({\n    id,\n    type\n  }))\n});\n\nconst mapStateToProps = state => {\n  var _state$currentSong$ba;\n\n  return {\n    isDark: (_state$currentSong$ba = state.currentSong.background) === null || _state$currentSong$ba === void 0 ? void 0 : _state$currentSong$ba.isDark\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst MusicPlayer = ({\n  fetchPlaylist,\n  isDark\n}) => {\n  let audioPlayer;\n  fetchPlaylist({\n    id: \"5f1423c54ee369215e05625e\",\n    type: \"album\"\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      margin: 0,\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      color: isDark ? \"white\" : \"black\",\n      fontFamily: \"'Work Sans', sans-serif\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"5%\",\n      width: \"90%\",\n      textAlign: \"center\",\n      padding: \"5% 5% 2% 5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NowPlaying, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AlbumArt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    ref: element => audioPlayer = element // src={currentSong.data ? `/api/song/${currentSong.data._id}` : \"\"}\n    ,\n    listenInterval: 1000,\n    onListen: e => console.log(e),\n    onLoadedMetadata: data => console.log(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Controls, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default connector(MusicPlayer);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/views/MusicPlayer.tsx"],"names":["React","fetchPlaylist","connect","ReactAudioPlayer","AlbumArt","Controls","NowPlaying","mapDispatchToProps","dispatch","id","type","mapStateToProps","state","isDark","currentSong","background","connector","MusicPlayer","audioPlayer","display","margin","position","height","width","color","fontFamily","fontSize","textAlign","padding","element","e","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwC,aAAxC;AAGA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,UAA5B,QAA6C,eAA7C;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EP,EAAAA,aAAa,EAAE,CAAC;AAAEQ,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KACbF,QAAQ,CAACP,aAAa,CAAC;AAAEQ,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,CAAd;AAFkE,CAAnD,CAA3B;;AAKA,MAAMC,eAAe,GAAIC,KAAD;AAAA;;AAAA,SAAmB;AACzCC,IAAAA,MAAM,2BAAED,KAAK,CAACE,WAAN,CAAkBC,UAApB,0DAAE,sBAA8BF;AADG,GAAnB;AAAA,CAAxB;;AAIA,MAAMG,SAAS,GAAGd,OAAO,CAACS,eAAD,EAAkBJ,kBAAlB,CAAzB;;AAIA,MAAMU,WAAqC,GAAG,CAAC;AAC7ChB,EAAAA,aAD6C;AAE7CY,EAAAA;AAF6C,CAAD,KAG1B;AAClB,MAAIK,WAAJ;AACAjB,EAAAA,aAAa,CAAC;AAAEQ,IAAAA,EAAE,EAAE,0BAAN;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GAAD,CAAb;AAEA,sBACE;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,OAAO,EAAE,OADJ;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,QAAQ,EAAE,UAHL;AAILC,MAAAA,MAAM,EAAE,MAJH;AAKLC,MAAAA,KAAK,EAAE,MALF;AAMLC,MAAAA,KAAK,EAAEX,MAAM,GAAG,OAAH,GAAa,OANrB;AAOLY,MAAAA,UAAU,EAAE,yBAPP;AAQLC,MAAAA,QAAQ,EAAE;AARL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAYE;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,MAAM,EAAE,IADH;AAELC,MAAAA,KAAK,EAAE,KAFF;AAGLI,MAAAA,SAAS,EAAE,QAHN;AAILC,MAAAA,OAAO,EAAE;AAJJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAZF,eAsBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eAuBE,oBAAC,gBAAD;AACE,IAAA,GAAG,EAAGC,OAAD,IAAgCX,WAAW,GAAGW,OADrD,CAEE;AAFF;AAGE,IAAA,cAAc,EAAE,IAHlB;AAIE,IAAA,QAAQ,EAAGC,CAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAJnB;AAKE,IAAA,gBAAgB,EAAGG,IAAD,IAAUF,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA8BI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADF;AAkCD,CAzCD;;AA2CA,eAAejB,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { Action } from \"redux\";\nimport { fetchPlaylist } from \"../store/actions\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { State } from \"../store/types\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport {AlbumArt, Controls, NowPlaying} from \"../components\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  fetchPlaylist: ({ id, type }: { id: string; type: \"album\" | \"artist\" }) =>\n    dispatch(fetchPlaylist({ id, type }))\n});\n\nconst mapStateToProps = (state: State) => ({\n  isDark: state.currentSong.background?.isDark\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst MusicPlayer: React.FC<PropsFromRedux> = ({\n  fetchPlaylist,\n  isDark\n}): ReactElement => {\n  let audioPlayer: ReactAudioPlayer;\n  fetchPlaylist({ id: \"5f1423c54ee369215e05625e\", type: \"album\" });\n\n  return (\n    <div\n      style={{\n        display: \"block\",\n        margin: 0,\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        color: isDark ? \"white\" : \"black\",\n        fontFamily: \"'Work Sans', sans-serif\",\n        fontSize: \"18px\"\n      }}\n    >\n      <div\n        style={{\n          height: \"5%\",\n          width: \"90%\",\n          textAlign: \"center\",\n          padding: \"5% 5% 2% 5%\"\n        }}\n      >\n        <NowPlaying />\n      </div>\n      <AlbumArt />\n      <ReactAudioPlayer\n        ref={(element: ReactAudioPlayer) => (audioPlayer = element)}\n        // src={currentSong.data ? `/api/song/${currentSong.data._id}` : \"\"}\n        listenInterval={1000}\n        onListen={(e) => console.log(e)}\n        onLoadedMetadata={(data) => console.log(data)}\n      />\n        <Controls />\n    </div>\n  );\n};\n\nexport default connector(MusicPlayer);\n"]},"metadata":{},"sourceType":"module"}