{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/TabButton.tsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { shuffleSongs } from \"../../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setSelectedTab: tab => dispatch(setSelectedTab(tab)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = state => ({\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst TabButton = ({\n  selectedTab,\n  setSelectedTab,\n  icon,\n  tabName,\n  title\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setSelectedTab(tabName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, icon && /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  }), title && {\n    title\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: selectedTab === tabName ? \"200%\" : 0,\n      height: \"8px\",\n      backgroundColor: \"black\",\n      position: \"relative\",\n      left: \"-50%\",\n      marginTop: \"8px\",\n      transition: \"all 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connector(TabButton);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/TabButton.tsx"],"names":["React","FontAwesomeIcon","connect","setSelectedTab","shuffleSongs","mapDispatchToProps","dispatch","tab","mapStateToProps","state","selectedTab","menu","connector","TabButton","icon","tabName","title","width","height","backgroundColor","position","left","marginTop","transition"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAGA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,QAA6B,wCAA7B;;AAGA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EH,EAAAA,cAAc,EAAGI,GAAD,IAAeD,QAAQ,CAACH,cAAc,CAACI,GAAD,CAAf,CADqC;AAE5EH,EAAAA,YAAY,EAAE,MAAME,QAAQ,CAACF,YAAY,EAAb;AAFgD,CAAnD,CAA3B;;AAKA,MAAMI,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,WAAW,EAAED,KAAK,CAACE,IAAN,CAAWD;AADiB,CAAnB,CAAxB;;AAIA,MAAME,SAAS,GAAGV,OAAO,CAACM,eAAD,EAAkBH,kBAAlB,CAAzB;;AAUA,MAAMQ,SAA8C,GAAG,CAAC;AACtDH,EAAAA,WADsD;AAEtDP,EAAAA,cAFsD;AAGtDW,EAAAA,IAHsD;AAItDC,EAAAA,OAJsD;AAKtDC,EAAAA;AALsD,CAAD,KAMnC;AAClB,sBACE;AAAK,IAAA,OAAO,EAAE,MAAMb,cAAc,CAACY,OAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,iBAAI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,EAEGE,KAAK,IAAI;AAAEA,IAAAA;AAAF,GAFZ,eAGE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEP,WAAW,KAAKK,OAAhB,GAA0B,MAA1B,GAAmC,CADrC;AAELG,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,eAAe,EAAE,OAHZ;AAILC,MAAAA,QAAQ,EAAE,UAJL;AAKLC,MAAAA,IAAI,EAAE,MALD;AAMLC,MAAAA,SAAS,EAAE,KANN;AAOLC,MAAAA,UAAU,EAAE;AAPP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAiBD,CAxBD;;AA0BA,eAAeX,SAAS,CAACC,SAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { State, Tabs } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { shuffleSongs } from \"../../store/actions/currentSongActions\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = (state: State) => ({\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface TabButtonProps {\n  icon?: IconProp;\n  title?: string;\n  tabName: Tabs | string;\n}\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst TabButton: FC<PropsFromRedux & TabButtonProps> = ({\n  selectedTab,\n  setSelectedTab,\n  icon,\n  tabName,\n  title\n}): ReactElement => {\n  return (\n    <div onClick={() => setSelectedTab(tabName)}>\n      {icon && <FontAwesomeIcon icon={icon} />}\n      {title && { title }}\n      <div\n        style={{\n          width: selectedTab === tabName ? \"200%\" : 0,\n          height: \"8px\",\n          backgroundColor: \"black\",\n          position: \"relative\",\n          left: \"-50%\",\n          marginTop: \"8px\",\n          transition: \"all 0.5s ease\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default connector(TabButton);\n"]},"metadata":{},"sourceType":"module"}