{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/PlaylistTab.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { InfoTile } from \"./\";\nimport { artistsToString } from \"../../utils\";\nimport { setIsOpen, shuffleSongs } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst PlaylistTab = ({\n  current,\n  next,\n  previous,\n  selectedTab,\n  setIsOpen,\n  shuffleSongs\n}) => {\n  const handleClick = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, selectedTab === \"PLAYLIST\" && previous && previous.length > 0 && previous.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), selectedTab === \"PLAYLIST\" && current && /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${current._id}`,\n    title: current.name,\n    subtitle: artistsToString(current.artists),\n    onClick: () => handleClick(),\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), selectedTab === \"PLAYLIST\" && next && next.length > 0 && next.map(playlist => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${playlist._id}`,\n    title: playlist.name,\n    subtitle: artistsToString(playlist.artists),\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), selectedTab === \"PLAYLIST\" && (!next || next.length === 0) && (!previous || previous.length === 0) && !current && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Use the Songs or Search tab to add songs to the playlist.\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"4vh\",\n      width: \"80vw\",\n      fontSize: \"36px\",\n      position: \"absolute\",\n      bottom: \"5vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"CLEAR\",\n    style: {\n      width: \"30%\",\n      fontSize: \"36px\",\n      paddingLeft: \"2vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"SHUFFLE\",\n    style: {\n      width: \"40%\",\n      fontSize: \"36px\",\n      paddingLeft: \"2vw\"\n    },\n    onClick: shuffleSongs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"SAVE\",\n    style: {\n      width: \"30%\",\n      fontSize: \"36px\",\n      paddingLeft: \"2vw\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connector(PlaylistTab);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/PlaylistTab.tsx"],"names":["React","connect","InfoTile","artistsToString","setIsOpen","shuffleSongs","mapDispatchToProps","dispatch","isOpen","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","PlaylistTab","handleClick","length","map","_id","name","artists","fontSize","textAlign","display","height","width","position","bottom","paddingLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAEA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,eAAT,QAAgC,aAAhC;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,qBAAxC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EH,EAAAA,SAAS,EAAGI,MAAD,IAAqBD,QAAQ,CAACH,SAAS,CAACI,MAAD,CAAV,CADoC;AAE5EH,EAAAA,YAAY,EAAE,MAAME,QAAQ,CAACF,YAAY,EAAb;AAFgD,CAAnD,CAA3B;;AAKA,MAAMI,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD,OADiB;AAEzCE,EAAAA,IAAI,EAAEH,KAAK,CAACE,QAAN,CAAeC,IAFoB;AAGzCC,EAAAA,QAAQ,EAAEJ,KAAK,CAACE,QAAN,CAAeE,QAHgB;AAIzCC,EAAAA,WAAW,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJiB,CAAnB,CAAxB;;AAOA,MAAME,SAAS,GAAGhB,OAAO,CAACQ,eAAD,EAAkBH,kBAAlB,CAAzB;;AAIA,MAAMY,WAA+B,GAAG,CAAC;AACvCP,EAAAA,OADuC;AAEvCE,EAAAA,IAFuC;AAGvCC,EAAAA,QAHuC;AAIvCC,EAAAA,WAJuC;AAKvCX,EAAAA,SALuC;AAMvCC,EAAAA;AANuC,CAAD,KAOpB;AAClB,QAAMc,WAAW,GAAG,MAAM;AACxBf,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE,0CACGW,WAAW,KAAK,UAAhB,IACCD,QADD,IAECA,QAAQ,CAACM,MAAT,GAAkB,CAFnB,IAGCN,QAAQ,CAACO,GAAT,CAAcT,QAAD,iBACX,oBAAC,QAAD;AACE,IAAA,GAAG,EAAG,aAAYA,QAAQ,CAACU,GAAI,EADjC;AAEE,IAAA,KAAK,EAAEV,QAAQ,CAACW,IAFlB;AAGE,IAAA,QAAQ,EAAEpB,eAAe,CAACS,QAAQ,CAACY,OAAV,CAH3B;AAIE,IAAA,OAAO,EAAE,MAAML,WAAW,EAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,EAYGJ,WAAW,KAAK,UAAhB,IAA8BJ,OAA9B,iBACC,oBAAC,QAAD;AACE,IAAA,GAAG,EAAG,aAAYA,OAAO,CAACW,GAAI,EADhC;AAEE,IAAA,KAAK,EAAEX,OAAO,CAACY,IAFjB;AAGE,IAAA,QAAQ,EAAEpB,eAAe,CAACQ,OAAO,CAACa,OAAT,CAH3B;AAIE,IAAA,OAAO,EAAE,MAAML,WAAW,EAJ5B;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAqBGJ,WAAW,KAAK,UAAhB,IACCF,IADD,IAECA,IAAI,CAACO,MAAL,GAAc,CAFf,IAGCP,IAAI,CAACQ,GAAL,CAAUT,QAAD,iBACP,oBAAC,QAAD;AACE,IAAA,GAAG,EAAG,aAAYA,QAAQ,CAACU,GAAI,EADjC;AAEE,IAAA,KAAK,EAAEV,QAAQ,CAACW,IAFlB;AAGE,IAAA,QAAQ,EAAEpB,eAAe,CAACS,QAAQ,CAACY,OAAV,CAH3B;AAIE,IAAA,OAAO,EAAE,MAAML,WAAW,EAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAxBJ,EAgCGJ,WAAW,KAAK,UAAhB,KACE,CAACF,IAAD,IAASA,IAAI,CAACO,MAAL,KAAgB,CAD3B,MAEE,CAACN,QAAD,IAAaA,QAAQ,CAACM,MAAT,KAAoB,CAFnC,KAGC,CAACT,OAHF,iBAIG;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEApCN,eAyCE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,MAAM,EAAE,KAFH;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILJ,MAAAA,QAAQ,EAAE,MAJL;AAKLK,MAAAA,QAAQ,EAAE,UALL;AAMLC,MAAAA,MAAM,EAAE;AANH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,KAAK,EAAE;AACLF,MAAAA,KAAK,EAAE,KADF;AAELJ,MAAAA,QAAQ,EAAE,MAFL;AAGLO,MAAAA,WAAW,EAAE;AAHR,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAmBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,KAAK,EAAE;AACLH,MAAAA,KAAK,EAAE,KADF;AAELJ,MAAAA,QAAQ,EAAE,MAFL;AAGLO,MAAAA,WAAW,EAAE;AAHR,KAHT;AAQE,IAAA,OAAO,EAAE3B,YARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,eA6BE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,KAAK,EAAE;AACLwB,MAAAA,KAAK,EAAE,KADF;AAELJ,MAAAA,QAAQ,EAAE,MAFL;AAGLO,MAAAA,WAAW,EAAE;AAHR,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CAzCF,CADF;AAmFD,CA/FD;;AAiGA,eAAef,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { Action } from \"redux\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { InfoTile } from \"./\";\nimport { artistsToString } from \"../../utils\";\nimport { State } from \"../../store/types\";\nimport { setIsOpen, shuffleSongs } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setIsOpen: (isOpen: boolean) => dispatch(setIsOpen(isOpen)),\n  shuffleSongs: () => dispatch(shuffleSongs())\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst PlaylistTab: FC<PropsFromRedux> = ({\n  current,\n  next,\n  previous,\n  selectedTab,\n  setIsOpen,\n  shuffleSongs\n}): ReactElement => {\n  const handleClick = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      {selectedTab === \"PLAYLIST\" &&\n        previous &&\n        previous.length > 0 &&\n        previous.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleClick()}\n          />\n        ))}\n      {selectedTab === \"PLAYLIST\" && current && (\n        <InfoTile\n          key={`info-tile-${current._id}`}\n          title={current.name}\n          subtitle={artistsToString(current.artists)}\n          onClick={() => handleClick()}\n          selected\n        />\n      )}\n      {selectedTab === \"PLAYLIST\" &&\n        next &&\n        next.length > 0 &&\n        next.map((playlist) => (\n          <InfoTile\n            key={`info-tile-${playlist._id}`}\n            title={playlist.name}\n            subtitle={artistsToString(playlist.artists)}\n            onClick={() => handleClick()}\n          />\n        ))}\n      {selectedTab === \"PLAYLIST\" &&\n        (!next || next.length === 0) &&\n        (!previous || previous.length === 0) &&\n        !current && (\n          <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n            Use the Songs or Search tab to add songs to the playlist.\n          </div>\n        )}\n\n      <div\n        style={{\n          display: \"flex\",\n          height: \"4vh\",\n          width: \"80vw\",\n          fontSize: \"36px\",\n          position: \"absolute\",\n          bottom: \"5vh\"\n        }}\n      >\n        <input\n          type=\"button\"\n          value=\"CLEAR\"\n          style={{\n            width: \"30%\",\n            fontSize: \"36px\",\n            paddingLeft: \"2vw\"\n          }}\n        />\n        <input\n          type=\"button\"\n          value=\"SHUFFLE\"\n          style={{\n            width: \"40%\",\n            fontSize: \"36px\",\n            paddingLeft: \"2vw\"\n          }}\n          onClick={shuffleSongs}\n        />\n        <input\n          type=\"button\"\n          value=\"SAVE\"\n          style={{\n            width: \"30%\",\n            fontSize: \"36px\",\n            paddingLeft: \"2vw\"\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default connector(PlaylistTab);\n"]},"metadata":{},"sourceType":"module"}