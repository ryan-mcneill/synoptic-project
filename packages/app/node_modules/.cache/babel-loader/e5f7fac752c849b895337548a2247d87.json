{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeSong, setIsOpen } from \"../../store/actions\";\n\nconst mapDispatchToProps = dispatch => ({\n  changeSong: id => dispatch(changeSong({\n    id\n  })),\n  setIsOpen: isOpen => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = state => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Playlist = ({// playlists,\n  // changeSong,\n  // setIsOpen,\n  // selectedTab\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport default connector(Playlist);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Playlist.tsx"],"names":["React","connect","changeSong","setIsOpen","mapDispatchToProps","dispatch","id","isOpen","mapStateToProps","state","current","playlist","next","previous","selectedTab","menu","connector","Playlist"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAGA,SAASC,OAAT,QAAwC,aAAxC;AAIA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,qBAAtC;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EH,EAAAA,UAAU,EAAGI,EAAD,IAAgBD,QAAQ,CAACH,UAAU,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAX,CADwC;AAE5EH,EAAAA,SAAS,EAAGI,MAAD,IAAsBF,QAAQ,CAACF,SAAS,CAACI,MAAD,CAAV;AAFmC,CAAnD,CAA3B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,OAAO,EAAED,KAAK,CAACE,QAAN,CAAeD,OADiB;AAEzCE,EAAAA,IAAI,EAAEH,KAAK,CAACE,QAAN,CAAeC,IAFoB;AAGzCC,EAAAA,QAAQ,EAAEJ,KAAK,CAACE,QAAN,CAAeE,QAHgB;AAIzCC,EAAAA,WAAW,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJiB,CAAnB,CAAxB;;AAOA,MAAME,SAAS,GAAGf,OAAO,CAACO,eAAD,EAAkBJ,kBAAlB,CAAzB;;AAIA,MAAMa,QAA4B,GAAG,CAAC,CACpC;AACA;AACA;AACA;AAJoC,CAAD,KAKjB;AAClB,sBACE,yCADF;AAqBD,CA3BD;;AA6BA,eAAeD,SAAS,CAACC,QAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { artistsToString } from \"../../utils\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { changeSong, setIsOpen } from \"../../store/actions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  changeSong: (id: string) => dispatch(changeSong({ id })),\n  setIsOpen: (isOpen?: boolean) => dispatch(setIsOpen(isOpen))\n});\n\nconst mapStateToProps = (state: State) => ({\n  current: state.playlist.current,\n  next: state.playlist.next,\n  previous: state.playlist.previous,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Playlist: FC<PropsFromRedux> = ({\n  // playlists,\n  // changeSong,\n  // setIsOpen,\n  // selectedTab\n}): ReactElement => {\n  return (\n    <>\n      {/*{selectedTab === \"PLAYLIST\" && playlists && playlists.length > 0*/}\n      {/*  ? playlists.map((playlist) => (*/}\n      {/*      <InfoTile*/}\n      {/*        key={`info-tile-${playlist._id}`}*/}\n      {/*        title={playlist.name}*/}\n      {/*        subtitle={artistsToString(playlist.artists)}*/}\n      {/*        onClick={() => {*/}\n      {/*          changeSong(playlist._id);*/}\n      {/*          setIsOpen(false);*/}\n      {/*        }}*/}\n      {/*      />*/}\n      {/*    ))*/}\n      {/*  : selectedTab === \"PLAYLIST\" && (*/}\n      {/*      <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>*/}\n      {/*        There are no song playlists currently selected.*/}\n      {/*      </div>*/}\n      {/*    )}*/}\n    </>\n  );\n};\n\nexport default connector(Playlist);\n"]},"metadata":{},"sourceType":"module"}