{"ast":null,"code":"import { SET_BACKGROUND, SET_SONG, TOGGLE_PLAYING } from \"../types\";\nconst initialState = {\n  isPlaying: false\n};\nexport const currentSong = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SONG:\n      return { ...state,\n        data: action.data,\n        albumArt: `/api/album-art/${action.data.albums[0]._id}`,\n        song: `/api/song/${action.data._id}`\n      };\n\n    case SET_BACKGROUND:\n      return { ...state,\n        background: action.data\n      };\n\n    case TOGGLE_PLAYING:\n      return { ...state,\n        isPlaying: action.isPlaying ? action.isPlaying : !state.isPlaying\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/reducers/currentSongReducers.ts"],"names":["SET_BACKGROUND","SET_SONG","TOGGLE_PLAYING","initialState","isPlaying","currentSong","state","action","type","data","albumArt","albums","_id","song","background"],"mappings":"AAAA,SAGEA,cAHF,EAIEC,QAJF,EAKEC,cALF,QAMO,UANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,OAAO,MAAMC,WAAW,GAAG,CACzBC,KAAuB,GAAGH,YADD,EAEzBI,MAFyB,KAGtB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,QAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,IAAI,EAAEF,MAAM,CAACE,IAFR;AAGLC,QAAAA,QAAQ,EAAG,kBAAiBH,MAAM,CAACE,IAAP,CAAYE,MAAZ,CAAmB,CAAnB,EAAsBC,GAAI,EAHjD;AAILC,QAAAA,IAAI,EAAG,aAAYN,MAAM,CAACE,IAAP,CAAYG,GAAI;AAJ9B,OAAP;;AAMF,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELQ,QAAAA,UAAU,EAAEP,MAAM,CAACE;AAFd,OAAP;;AAIF,SAAKP,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,SAAS,EAAEG,MAAM,CAACH,SAAP,GAAmBG,MAAM,CAACH,SAA1B,GAAsC,CAACE,KAAK,CAACF;AAFnD,OAAP;;AAIF;AAAS;AACP,eAAOE,KAAP;AACD;AApBH;AAsBD,CA1BM","sourcesContent":["import {\n  CurrentSongActions,\n  CurrentSongState,\n  SET_BACKGROUND,\n  SET_SONG,\n  TOGGLE_PLAYING\n} from \"../types\";\n\nconst initialState = {\n  isPlaying: false\n};\n\nexport const currentSong = (\n  state: CurrentSongState = initialState,\n  action: CurrentSongActions\n) => {\n  switch (action.type) {\n    case SET_SONG:\n      return {\n        ...state,\n        data: action.data,\n        albumArt: `/api/album-art/${action.data.albums[0]._id}`,\n        song: `/api/song/${action.data._id}`\n      };\n    case SET_BACKGROUND:\n      return {\n        ...state,\n        background: action.data\n      };\n    case TOGGLE_PLAYING:\n      return {\n        ...state,\n        isPlaying: action.isPlaying ? action.isPlaying : !state.isPlaying\n      };\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}