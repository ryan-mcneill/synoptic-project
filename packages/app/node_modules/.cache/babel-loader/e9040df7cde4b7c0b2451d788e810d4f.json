{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Controls.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause, faPlay, faStepBackward, faStepForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  togglePlaying: playing => dispatch(togglePlaying(playing)),\n  changeSong: type => dispatch(changeSong(type))\n});\n\nconst mapStateToProps = state => {\n  var _state$currentSong$da;\n\n  return {\n    isPlaying: state.currentSong.isPlaying,\n    songId: (_state$currentSong$da = state.currentSong.data) === null || _state$currentSong$da === void 0 ? void 0 : _state$currentSong$da._id\n  };\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Controls = ({\n  isPlaying,\n  changeSong,\n  songId,\n  togglePlaying\n}) => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  const [input, setInput] = useState(0);\n  const [change, setChange] = useState(0);\n  let audioPlayer;\n  console.log(\"I'm rerendering everything\");\n  useEffect(() => {\n    console.log(\"input: \", input);\n  }, [input]);\n  useEffect(() => {\n    console.log(\"change: \", change);\n  }, [change]);\n\n  const onSongLoad = data => {\n    var _audioPlayer, _audioPlayer$audioEl;\n\n    if ((_audioPlayer = audioPlayer) === null || _audioPlayer === void 0 ? void 0 : (_audioPlayer$audioEl = _audioPlayer.audioEl) === null || _audioPlayer$audioEl === void 0 ? void 0 : _audioPlayer$audioEl.current) {\n      if (isPlaying) audioPlayer.audioEl.current.play();\n      setSongLength(audioPlayer.audioEl.current.duration);\n    }\n  };\n\n  const formatTime = time => {\n    const tempDate = new Date(Math.round(time) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n    return minutes.toString().padStart(2, \"0\") + \":\" + seconds.toString().padStart(2, \"0\");\n  };\n\n  const playStatusHandler = () => {\n    var _audioPlayer2, _audioPlayer2$audioEl;\n\n    if ((_audioPlayer2 = audioPlayer) === null || _audioPlayer2 === void 0 ? void 0 : (_audioPlayer2$audioEl = _audioPlayer2.audioEl) === null || _audioPlayer2$audioEl === void 0 ? void 0 : _audioPlayer2$audioEl.current) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  const changeSongHandler = type => {\n    changeSong(type);\n    setSongTime(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"10%\",\n      width: \"90%\",\n      position: \"absolute\",\n      bottom: 0,\n      padding: \"4% 5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactAudioPlayer, {\n    ref: element => audioPlayer = element,\n    src: songId ? `/api/song/${songId}` : \"\",\n    listenInterval: 1000,\n    onListen: e => setSongTime(e),\n    onLoadedMetadata: data => onSongLoad(data),\n    onEnded: () => changeSongHandler(\"NEXT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => changeSongHandler(\"PREV\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepBackward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"96px\",\n      margin: \"0 96px\"\n    },\n    onClick: playStatusHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: isPlaying ? faPause : faPlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\"\n    },\n    onClick: () => changeSongHandler(\"NEXT\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepForward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: \"48px\",\n      fontSize: \"32px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, formatTime(songTime)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    style: {\n      width: \"100%\",\n      margin: \"0 24px\"\n    },\n    min: \"0\",\n    max: songLength,\n    defaultValue: songTime,\n    onChange: e => setChange(change + 1),\n    onInput: e => setInput(input + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, formatTime(songLength))));\n};\n\nexport default connector(Controls);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Controls.tsx"],"names":["React","useEffect","useState","FontAwesomeIcon","faPause","faPlay","faStepBackward","faStepForward","connect","ReactAudioPlayer","changeSong","togglePlaying","mapDispatchToProps","dispatch","playing","type","mapStateToProps","state","isPlaying","currentSong","songId","data","_id","connector","Controls","songLength","setSongLength","songTime","setSongTime","input","setInput","change","setChange","audioPlayer","console","log","onSongLoad","audioEl","current","play","duration","formatTime","time","tempDate","Date","Math","round","minutes","getMinutes","seconds","getSeconds","toString","padStart","playStatusHandler","changeSongHandler","height","width","position","bottom","padding","element","e","display","alignItems","justifyContent","fontSize","margin","marginTop"],"mappings":"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","sourcesContent":["import React, {\n  ReactElement,\n  SyntheticEvent,\n  useEffect,\n  useState\n} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPause,\n  faPlay,\n  faStepBackward,\n  faStepForward\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ChangeSong, State } from \"../store/types\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { changeSong, togglePlaying } from \"../store/actions/currentSongActions\";\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  togglePlaying: (playing?: boolean) => dispatch(togglePlaying(playing)),\n  changeSong: (type: ChangeSong) => dispatch(changeSong(type))\n});\n\nconst mapStateToProps = (state: State) => ({\n  isPlaying: state.currentSong.isPlaying,\n  songId: state.currentSong.data?._id\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Controls: React.FC<PropsFromRedux> = ({\n  isPlaying,\n  changeSong,\n  songId,\n  togglePlaying\n}): ReactElement => {\n  const [songLength, setSongLength] = useState(0);\n  const [songTime, setSongTime] = useState(0);\n  const [input, setInput] = useState(0);\n  const [change, setChange] = useState(0);\n  let audioPlayer: ReactAudioPlayer;\n\n  console.log(\"I'm rerendering everything\");\n\n  useEffect(() => {\n    console.log(\"input: \", input);\n  }, [input]);\n\n  useEffect(() => {\n    console.log(\"change: \", change);\n  }, [change]);\n\n  const onSongLoad = (data: SyntheticEvent<HTMLAudioElement, Event>) => {\n    if (audioPlayer?.audioEl?.current) {\n      if (isPlaying) audioPlayer.audioEl.current.play();\n      setSongLength(audioPlayer.audioEl.current.duration);\n    }\n  };\n\n  const formatTime = (time: number): string => {\n    const tempDate = new Date(Math.round(time) * 1000);\n    const minutes = tempDate.getMinutes();\n    const seconds = tempDate.getSeconds();\n\n    return (\n      minutes.toString().padStart(2, \"0\") +\n      \":\" +\n      seconds.toString().padStart(2, \"0\")\n    );\n  };\n\n  const playStatusHandler = () => {\n    if (audioPlayer?.audioEl?.current) {\n      togglePlaying();\n      audioPlayer.audioEl.current[isPlaying ? \"pause\" : \"play\"]();\n    }\n  };\n\n  const changeSongHandler = (type: ChangeSong) => {\n    changeSong(type);\n    setSongTime(0);\n  };\n\n  return (\n    <div\n      style={{\n        height: \"10%\",\n        width: \"90%\",\n        position: \"absolute\",\n        bottom: 0,\n        padding: \"4% 5%\"\n      }}\n    >\n      <ReactAudioPlayer\n        ref={(element: ReactAudioPlayer) => (audioPlayer = element)}\n        src={songId ? `/api/song/${songId}` : \"\"}\n        listenInterval={1000}\n        onListen={(e) => setSongTime(e)}\n        onLoadedMetadata={(data) => onSongLoad(data)}\n        onEnded={() => changeSongHandler(\"NEXT\")}\n      />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div\n          style={{ fontSize: \"48px\" }}\n          onClick={() => changeSongHandler(\"PREV\")}\n        >\n          <FontAwesomeIcon icon={faStepBackward} />\n        </div>\n        <div\n          style={{ fontSize: \"96px\", margin: \"0 96px\" }}\n          onClick={playStatusHandler}\n        >\n          <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n        </div>\n        <div\n          style={{ fontSize: \"48px\" }}\n          onClick={() => changeSongHandler(\"NEXT\")}\n        >\n          <FontAwesomeIcon icon={faStepForward} />\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginTop: \"48px\",\n          fontSize: \"32px\"\n        }}\n      >\n        <div>{formatTime(songTime)}</div>\n        <input\n          type=\"range\"\n          style={{ width: \"100%\", margin: \"0 24px\" }}\n          min=\"0\"\n          max={songLength}\n          defaultValue={songTime}\n          onChange={(e) => setChange(change + 1)}\n          onInput={(e) => setInput(input + 1)}\n        />\n        <div>{formatTime(songLength)}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default connector(Controls);\n"]},"metadata":{},"sourceType":"module"}