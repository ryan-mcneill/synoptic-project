{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_ARTISTS, FETCH_ARTISTS_FAILURE, FETCH_ARTISTS_SUCCESS } from \"../types\";\n\nconst fetchArtistsAction = () => ({\n  type: FETCH_ARTISTS\n});\n\nconst fetchArtistsFailure = error => ({\n  type: FETCH_ARTISTS_FAILURE,\n  payload: {\n    error\n  }\n});\n\nconst fetchArtistsSuccess = artists => ({\n  type: FETCH_ARTISTS_SUCCESS,\n  payload: artists\n});\n\nexport const fetchArtists = () => {\n  return dispatch => {\n    dispatch(fetchArtistsAction());\n    axios.get(`/api/artists`).then(artistsResponse => {\n      Promise.all(artistsResponse.data.map(artist => axios.get(`/api/songs/artist/${artist._id}`).then(songResponse => songResponse.data))).then(songs => {\n        let artistsData = artistsResponse.data.reduce((acc, {\n          _id,\n          name\n        }) => {\n          acc = { ...acc,\n            [_id]: {\n              name,\n              songs\n            }\n          };\n          return acc;\n        }, {});\n        dispatch(fetchArtistsSuccess(artistsData));\n      }).catch(err => {\n        dispatch(fetchArtistsFailure(err.message));\n      });\n    }).catch(err => {\n      dispatch(fetchArtistsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/actions/artistsActions.ts"],"names":["axios","FETCH_ARTISTS","FETCH_ARTISTS_FAILURE","FETCH_ARTISTS_SUCCESS","fetchArtistsAction","type","fetchArtistsFailure","error","payload","fetchArtistsSuccess","artists","fetchArtists","dispatch","get","then","artistsResponse","Promise","all","data","map","artist","_id","songResponse","songs","artistsData","reduce","acc","name","catch","err","message"],"mappings":"AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,SAEEC,aAFF,EAGEC,qBAHF,EAIEC,qBAJF,QASO,UATP;;AAWA,MAAMC,kBAAqD,GAAG,OAAO;AACnEC,EAAAA,IAAI,EAAEJ;AAD6D,CAAP,CAA9D;;AAIA,MAAMK,mBAA6D,GACjEC,KADoE,KAEhE;AACJF,EAAAA,IAAI,EAAEH,qBADF;AAEJM,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAFL,CAFgE,CAAtE;;AAOA,MAAME,mBAA6D,GACjEC,OADoE,KAEhE;AACJL,EAAAA,IAAI,EAAEF,qBADF;AAEJK,EAAAA,OAAO,EAAEE;AAFL,CAFgE,CAAtE;;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAQC,QAAD,IAAwB;AAC7BA,IAAAA,QAAQ,CAACR,kBAAkB,EAAnB,CAAR;AAEAJ,IAAAA,KAAK,CACFa,GADH,CACQ,cADR,EAEGC,IAFH,CAESC,eAAD,IAA4C;AAChDC,MAAAA,OAAO,CAACC,GAAR,CACEF,eAAe,CAACG,IAAhB,CAAqBC,GAArB,CAA0BC,MAAD,IACvBpB,KAAK,CACFa,GADH,CACQ,qBAAoBO,MAAM,CAACC,GAAI,EADvC,EAEGP,IAFH,CAESQ,YAAD,IAAkBA,YAAY,CAACJ,IAFvC,CADF,CADF,EAOGJ,IAPH,CAOSS,KAAD,IAAW;AACf,YAAIC,WAAW,GAAGT,eAAe,CAACG,IAAhB,CAAqBO,MAArB,CAChB,CAACC,GAAD,EAAU;AAAEL,UAAAA,GAAF;AAAOM,UAAAA;AAAP,SAAV,KAA0C;AACxCD,UAAAA,GAAG,GAAG,EAAE,GAAGA,GAAL;AAAU,aAACL,GAAD,GAAO;AAAEM,cAAAA,IAAF;AAAQJ,cAAAA;AAAR;AAAjB,WAAN;AACA,iBAAOG,GAAP;AACD,SAJe,EAKhB,EALgB,CAAlB;AAOAd,QAAAA,QAAQ,CAACH,mBAAmB,CAACe,WAAD,CAApB,CAAR;AACD,OAhBH,EAiBGI,KAjBH,CAiBUC,GAAD,IAAS;AACdjB,QAAAA,QAAQ,CAACN,mBAAmB,CAACuB,GAAG,CAACC,OAAL,CAApB,CAAR;AACD,OAnBH;AAoBD,KAvBH,EAwBGF,KAxBH,CAwBUC,GAAD,IAAS;AACdjB,MAAAA,QAAQ,CAACN,mBAAmB,CAACuB,GAAG,CAACC,OAAL,CAApB,CAAR;AACD,KA1BH;AA2BD,GA9BD;AA+BD,CAhCM","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { ActionCreator, Dispatch } from \"redux\";\nimport {\n  BasicDetails,\n  FETCH_ARTISTS,\n  FETCH_ARTISTS_FAILURE,\n  FETCH_ARTISTS_SUCCESS,\n  FetchArtistsAction,\n  FetchArtistsFailureAction,\n  FetchArtistsSuccessAction,\n  Song\n} from \"../types\";\n\nconst fetchArtistsAction: ActionCreator<FetchArtistsAction> = () => ({\n  type: FETCH_ARTISTS\n});\n\nconst fetchArtistsFailure: ActionCreator<FetchArtistsFailureAction> = (\n  error\n) => ({\n  type: FETCH_ARTISTS_FAILURE,\n  payload: { error }\n});\n\nconst fetchArtistsSuccess: ActionCreator<FetchArtistsSuccessAction> = (\n  artists\n) => ({\n  type: FETCH_ARTISTS_SUCCESS,\n  payload: artists\n});\n\nexport const fetchArtists = () => {\n  return (dispatch: Dispatch) => {\n    dispatch(fetchArtistsAction());\n\n    axios\n      .get(`/api/artists`)\n      .then((artistsResponse: AxiosResponse<Song[]>) => {\n        Promise.all(\n          artistsResponse.data.map((artist: BasicDetails) =>\n            axios\n              .get(`/api/songs/artist/${artist._id}`)\n              .then((songResponse) => songResponse.data)\n          )\n        )\n          .then((songs) => {\n            let artistsData = artistsResponse.data.reduce(\n              (acc: {}, { _id, name }: BasicDetails) => {\n                acc = { ...acc, [_id]: { name, songs } };\n                return acc;\n              },\n              {}\n            );\n            dispatch(fetchArtistsSuccess(artistsData));\n          })\n          .catch((err) => {\n            dispatch(fetchArtistsFailure(err.message));\n          });\n      })\n      .catch((err) => {\n        dispatch(fetchArtistsFailure(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}