{"ast":null,"code":"import { FETCH_SONGS, FETCH_SONGS_FAILURE, FETCH_SONGS_SUCCESS, PLAYLIST_ADD, SET_PLAYLIST, UPDATE_PLAYLIST } from \"../types\";\nconst initialState = {\n  next: []\n};\nexport const playlist = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_SONGS:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_SONGS_FAILURE:\n      return { ...state,\n        loading: false,\n        error: action.payload.error\n      };\n\n    case FETCH_SONGS_SUCCESS:\n      return { ...state,\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: { ...action.payload.firstSong,\n          albumArt: `/api/album/art/${action.payload.firstSong.albums[0]._id}`,\n          song: `/api/song/${action.payload.firstSong._id}`\n        },\n        next: action.payload.nextSongs\n      };\n\n    case PLAYLIST_ADD:\n      return { ...state,\n        next: { ...state.next,\n          ...action.payload\n        }\n      };\n\n    case UPDATE_PLAYLIST:\n      return { ...action.payload,\n        current: { ...action.payload.current,\n          albumArt: `/api/album/art/${action.payload.current.albums[0]._id}`,\n          song: `/api/song/${action.payload.current._id}`\n        }\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/reducers/playlistReducers.ts"],"names":["FETCH_SONGS","FETCH_SONGS_FAILURE","FETCH_SONGS_SUCCESS","PLAYLIST_ADD","SET_PLAYLIST","UPDATE_PLAYLIST","initialState","next","playlist","state","action","type","loading","error","payload","data","previous","current","firstSong","albumArt","albums","_id","song","nextSongs"],"mappings":"AAAA,SACEA,WADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,YAJF,EAOEC,YAPF,EAQEC,eARF,QASO,UATP;AAWA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,IAAI,EAAE;AAD4B,CAApC;AAIA,OAAO,MAAMC,QAAQ,GAAG,CACtBC,KAAoB,GAAGH,YADD,EAEtBI,MAFsB,KAGnB;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAEH,MAAM,CAACI,OAAP,CAAeD;AAHjB,OAAP;;AAKF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILE,QAAAA,IAAI,EAAEL,MAAM,CAACI;AAJR,OAAP;;AAMF,SAAKV,YAAL;AACE,aAAO;AACLY,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,OAAO,EAAE,EACP,GAAGP,MAAM,CAACI,OAAP,CAAeI,SADX;AAEPC,UAAAA,QAAQ,EAAG,kBAAiBT,MAAM,CAACI,OAAP,CAAeI,SAAf,CAAyBE,MAAzB,CAAgC,CAAhC,EAAmCC,GAAI,EAF5D;AAGPC,UAAAA,IAAI,EAAG,aAAYZ,MAAM,CAACI,OAAP,CAAeI,SAAf,CAAyBG,GAAI;AAHzC,SAFJ;AAOLd,QAAAA,IAAI,EAAEG,MAAM,CAACI,OAAP,CAAeS;AAPhB,OAAP;;AASF,SAAKpB,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,IAAI,EAAE,EACJ,GAAGE,KAAK,CAACF,IADL;AAEJ,aAAGG,MAAM,CAACI;AAFN;AAFD,OAAP;;AAOF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGK,MAAM,CAACI,OADL;AAELG,QAAAA,OAAO,EAAE,EACP,GAAGP,MAAM,CAACI,OAAP,CAAeG,OADX;AAEPE,UAAAA,QAAQ,EAAG,kBAAiBT,MAAM,CAACI,OAAP,CAAeG,OAAf,CAAuBG,MAAvB,CAA8B,CAA9B,EAAiCC,GAAI,EAF1D;AAGPC,UAAAA,IAAI,EAAG,aAAYZ,MAAM,CAACI,OAAP,CAAeG,OAAf,CAAuBI,GAAI;AAHvC;AAFJ,OAAP;;AAQF;AAAS;AACP,eAAOZ,KAAP;AACD;AAhDH;AAkDD,CAtDM","sourcesContent":["import {\n  FETCH_SONGS,\n  FETCH_SONGS_FAILURE,\n  FETCH_SONGS_SUCCESS,\n  PLAYLIST_ADD,\n  PlaylistActions,\n  PlaylistState,\n  SET_PLAYLIST,\n  UPDATE_PLAYLIST\n} from \"../types\";\n\nconst initialState: PlaylistState = {\n  next: []\n};\n\nexport const playlist = (\n  state: PlaylistState = initialState,\n  action: PlaylistActions\n) => {\n  switch (action.type) {\n    case FETCH_SONGS:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_SONGS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    case FETCH_SONGS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n    case SET_PLAYLIST:\n      return {\n        previous: [],\n        current: {\n          ...action.payload.firstSong,\n          albumArt: `/api/album/art/${action.payload.firstSong.albums[0]._id}`,\n          song: `/api/song/${action.payload.firstSong._id}`\n        },\n        next: action.payload.nextSongs\n      };\n    case PLAYLIST_ADD:\n      return {\n        ...state,\n        next: {\n          ...state.next,\n          ...action.payload\n        }\n      };\n    case UPDATE_PLAYLIST:\n      return {\n        ...action.payload,\n        current: {\n          ...action.payload.current,\n          albumArt: `/api/album/art/${action.payload.current.albums[0]._id}`,\n          song: `/api/song/${action.payload.current._id}`\n        }\n      };\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}