{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Albums.tsx\";\nimport React from \"react\";\nimport { InfoTile } from \"./\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../../store/actions\";\nimport { setPlaylist } from \"../../store/actions/playlistActions\";\n\nconst mapDispatchToProps = dispatch => ({\n  setPlaylist: songs => dispatch(setPlaylist(songs)),\n  setSelectedTab: tab => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = state => ({\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nconst Albums = ({\n  albums,\n  fetchSongs,\n  selectedTab,\n  setSelectedTab\n}) => {\n  const handleClick = id => {\n    setPlaylist(albums[id]);\n    setSelectedTab(\"PLAYLIST\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, selectedTab === \"ALBUMS\" && albums && albums !== {} ? Object.keys(albums).map(id => /*#__PURE__*/React.createElement(InfoTile, {\n    key: `info-tile-${id}`,\n    title: albums[id].name,\n    onClick: () => handleClick(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : selectedTab === \"ALBUMS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Sorry no albums have been loaded.\"));\n};\n\nexport default connector(Albums);","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/Albums.tsx"],"names":["React","InfoTile","connect","setSelectedTab","setPlaylist","mapDispatchToProps","dispatch","songs","tab","mapStateToProps","state","albums","data","selectedTab","menu","connector","Albums","fetchSongs","handleClick","id","Object","keys","map","name","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,IAAzB;AAEA,SAASC,OAAT,QAAwC,aAAxC;AAGA,SAAqBC,cAArB,QAA2C,qBAA3C;AACA,SAAQC,WAAR,QAA0B,qCAA1B;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAmD;AAC5EF,EAAAA,WAAW,EAAGG,KAAD,IAAmBD,QAAQ,CAACF,WAAW,CAACG,KAAD,CAAZ,CADoC;AAE5EJ,EAAAA,cAAc,EAAGK,GAAD,IAAeF,QAAQ,CAACH,cAAc,CAACK,GAAD,CAAf;AAFqC,CAAnD,CAA3B;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAmB;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,CAAaC,IADoB;AAEzCC,EAAAA,WAAW,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAFiB,CAAnB,CAAxB;;AAKA,MAAME,SAAS,GAAGb,OAAO,CAACO,eAAD,EAAkBJ,kBAAlB,CAAzB;;AAIA,MAAMW,MAA0B,GAAG,CAAC;AAClCL,EAAAA,MADkC;AAElCM,EAAAA,UAFkC;AAGlCJ,EAAAA,WAHkC;AAIlCV,EAAAA;AAJkC,CAAD,KAKf;AAClB,QAAMe,WAAW,GAAIC,EAAD,IAAgB;AAClCf,IAAAA,WAAW,CAACO,MAAM,CAACQ,EAAD,CAAP,CAAX;AACAhB,IAAAA,cAAc,CAAC,UAAD,CAAd;AACD,GAHD;;AAKA,sBACE,0CACGU,WAAW,KAAK,QAAhB,IAA4BF,MAA5B,IAAsCA,MAAM,KAAK,EAAjD,GACGS,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,GAApB,CAAyBH,EAAD,iBACtB,oBAAC,QAAD;AACE,IAAA,GAAG,EAAG,aAAYA,EAAG,EADvB;AAEE,IAAA,KAAK,EAAER,MAAM,CAACQ,EAAD,CAAN,CAAWI,IAFpB;AAGE,IAAA,OAAO,EAAE,MAAML,WAAW,CAACC,EAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAQGN,WAAW,KAAK,QAAhB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAVR,CADF;AAiBD,CA5BD;;AA8BA,eAAeV,SAAS,CAACC,MAAD,CAAxB","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { InfoTile } from \"./\";\nimport { State, Tabs } from \"../../store/types\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { Action } from \"redux\";\nimport { fetchSongs, setSelectedTab } from \"../../store/actions\";\nimport {setPlaylist} from \"../../store/actions/playlistActions\";\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, void, Action>) => ({\n  setPlaylist: (songs: Song[]) => dispatch(setPlaylist(songs)),\n  setSelectedTab: (tab: Tabs) => dispatch(setSelectedTab(tab))\n});\n\nconst mapStateToProps = (state: State) => ({\n  albums: state.albums.data,\n  selectedTab: state.menu.selectedTab\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nconst Albums: FC<PropsFromRedux> = ({\n  albums,\n  fetchSongs,\n  selectedTab,\n  setSelectedTab\n}): ReactElement => {\n  const handleClick = (id: string) => {\n    setPlaylist(albums[id])\n    setSelectedTab(\"PLAYLIST\");\n  };\n\n  return (\n    <>\n      {selectedTab === \"ALBUMS\" && albums && albums !== {}\n        ? Object.keys(albums).map((id) => (\n            <InfoTile\n              key={`info-tile-${id}`}\n              title={albums[id].name}\n              onClick={() => handleClick(id)}\n            />\n          ))\n        : selectedTab === \"ALBUMS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no albums have been loaded.\n            </div>\n          )}\n    </>\n  );\n};\n\nexport default connector(Albums);\n"]},"metadata":{},"sourceType":"module"}