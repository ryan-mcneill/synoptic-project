{"ast":null,"code":"var _jsxFileName = \"/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongsTab.tsx\";\nimport React, { useState } from \"react\";\nimport isempty from \"lodash.isempty\";\nimport { Accordion, SongList, TabButton } from \"./\";\n\nconst SongsTab = ({\n  artists,\n  albums,\n  playlists,\n  songs\n}) => {\n  const [selectedSongTab, setSelectedSongTab] = useState(\"ARTISTS\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      fontSize: \"36px\",\n      width: \"100%\",\n      textAlign: \"center\",\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TabButton, {\n    title: \"SONGS\",\n    onClick: () => setSelectedSongTab(\"SONGS\"),\n    isSelected: selectedSongTab === \"SONGS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TabButton, {\n    title: \"ARTISTS\",\n    onClick: () => setSelectedSongTab(\"ARTISTS\"),\n    isSelected: selectedSongTab === \"ARTISTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TabButton, {\n    title: \"ALBUMS\",\n    onClick: () => setSelectedSongTab(\"ALBUMS\"),\n    isSelected: selectedSongTab === \"ALBUMS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TabButton, {\n    title: \"PLAYLISTS\",\n    onClick: () => setSelectedSongTab(\"PLAYLISTS\"),\n    isSelected: selectedSongTab === \"PLAYLISTS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })), selectedSongTab === \"ARTISTS\" && artists && !isempty(artists) ? Object.keys(artists).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: artists[id].name,\n    data: artists[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"ARTISTS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Sorry no artists have been found.\"), selectedSongTab === \"ALBUMS\" && albums && !isempty(albums) ? Object.keys(albums).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: albums[id].name,\n    data: albums[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"ALBUMS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Sorry no albums have been found.\"), selectedSongTab === \"PLAYLISTS\" && playlists && !isempty(playlists) ? Object.keys(playlists).map(id => /*#__PURE__*/React.createElement(Accordion, {\n    key: `accordion-${id}`,\n    title: playlists[id].name,\n    data: playlists[id].songs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })) : selectedSongTab === \"PLAYLISTS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Sorry no playlists have been found.\"), selectedSongTab === \"SONGS\" && songs && songs.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"80px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SongList, {\n    data: songs,\n    isVisible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  })) : selectedSongTab === \"SONGS\" && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"48px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Sorry no songs have been found.\"));\n};\n\nexport default SongsTab;","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/components/Menu/SongsTab.tsx"],"names":["React","useState","isempty","Accordion","SongList","TabButton","SongsTab","artists","albums","playlists","songs","selectedSongTab","setSelectedSongTab","display","alignItems","justifyContent","fontSize","width","textAlign","marginBottom","Object","keys","map","id","name","length","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAkCC,QAAlC,QAAkD,OAAlD;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,SAA9B,QAA+C,IAA/C;;AASA,MAAMC,QAA2B,GAAG,CAAC;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,MAFmC;AAGnCC,EAAAA,SAHmC;AAInCC,EAAAA;AAJmC,CAAD,KAKhB;AAClB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,SAAD,CAAtD;AAEA,sBACE,uDACE;AACE,IAAA,KAAK,EAAE;AACLY,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE,cAHX;AAILC,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,KAAK,EAAE,MALF;AAMLC,MAAAA,SAAS,EAAE,QANN;AAOLC,MAAAA,YAAY,EAAE;AAPT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAE,MAAMP,kBAAkB,CAAC,OAAD,CAFnC;AAGE,IAAA,UAAU,EAAED,eAAe,KAAK,OAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAgBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE,MAAMC,kBAAkB,CAAC,SAAD,CAFnC;AAGE,IAAA,UAAU,EAAED,eAAe,KAAK,SAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAqBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,OAAO,EAAE,MAAMC,kBAAkB,CAAC,QAAD,CAFnC;AAGE,IAAA,UAAU,EAAED,eAAe,KAAK,QAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,eA0BE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAE,MAAMC,kBAAkB,CAAC,WAAD,CAFnC;AAGE,IAAA,UAAU,EAAED,eAAe,KAAK,WAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF,EAiCGA,eAAe,KAAK,SAApB,IAAiCJ,OAAjC,IAA4C,CAACL,OAAO,CAACK,OAAD,CAApD,GACGa,MAAM,CAACC,IAAP,CAAYd,OAAZ,EAAqBe,GAArB,CAA0BC,EAAD,iBACvB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAG,aAAYA,EAAG,EADvB;AAEE,IAAA,KAAK,EAAEhB,OAAO,CAACgB,EAAD,CAAP,CAAYC,IAFrB;AAGE,IAAA,IAAI,EAAEjB,OAAO,CAACgB,EAAD,CAAP,CAAYb,KAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAQGC,eAAe,KAAK,SAApB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBE,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA1CR,EA8CGP,eAAe,KAAK,QAApB,IAAgCH,MAAhC,IAA0C,CAACN,OAAO,CAACM,MAAD,CAAlD,GACGY,MAAM,CAACC,IAAP,CAAYb,MAAZ,EAAoBc,GAApB,CAAyBC,EAAD,iBACtB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAG,aAAYA,EAAG,EADvB;AAEE,IAAA,KAAK,EAAEf,MAAM,CAACe,EAAD,CAAN,CAAWC,IAFpB;AAGE,IAAA,IAAI,EAAEhB,MAAM,CAACe,EAAD,CAAN,CAAWb,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAQGC,eAAe,KAAK,QAApB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBE,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAvDR,EA2DGP,eAAe,KAAK,WAApB,IAAmCF,SAAnC,IAAgD,CAACP,OAAO,CAACO,SAAD,CAAxD,GACGW,MAAM,CAACC,IAAP,CAAYZ,SAAZ,EAAuBa,GAAvB,CAA4BC,EAAD,iBACzB,oBAAC,SAAD;AACE,IAAA,GAAG,EAAG,aAAYA,EAAG,EADvB;AAEE,IAAA,KAAK,EAAEd,SAAS,CAACc,EAAD,CAAT,CAAcC,IAFvB;AAGE,IAAA,IAAI,EAAEf,SAAS,CAACc,EAAD,CAAT,CAAcb,KAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,GAQGC,eAAe,KAAK,WAApB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBE,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CApER,EAwEGP,eAAe,KAAK,OAApB,IAA+BD,KAA/B,IAAwCA,KAAK,CAACe,MAAN,GAAe,CAAvD,gBACC;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEhB,KAAhB;AAAuB,IAAA,SAAS,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,GAKCC,eAAe,KAAK,OAApB,iBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBE,MAAAA,SAAS,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCA9EN,CADF;AAsFD,CA9FD;;AAgGA,eAAeZ,QAAf","sourcesContent":["import React, { FC, ReactElement, useState } from \"react\";\nimport isempty from \"lodash.isempty\";\nimport { ArtistsAndAlbumsData, Song } from \"../../store/types\";\nimport { Accordion, SongList, TabButton } from \"./\";\n\ninterface SongsTabProps {\n  artists: ArtistsAndAlbumsData | undefined;\n  albums: ArtistsAndAlbumsData | undefined;\n  playlists: ArtistsAndAlbumsData | undefined;\n  songs: Song[] | undefined;\n}\n\nconst SongsTab: FC<SongsTabProps> = ({\n  artists,\n  albums,\n  playlists,\n  songs\n}): ReactElement => {\n  const [selectedSongTab, setSelectedSongTab] = useState(\"ARTISTS\");\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          fontSize: \"36px\",\n          width: \"100%\",\n          textAlign: \"center\",\n          marginBottom: \"20px\"\n        }}\n      >\n        <TabButton\n          title=\"SONGS\"\n          onClick={() => setSelectedSongTab(\"SONGS\")}\n          isSelected={selectedSongTab === \"SONGS\"}\n        />\n        <TabButton\n          title=\"ARTISTS\"\n          onClick={() => setSelectedSongTab(\"ARTISTS\")}\n          isSelected={selectedSongTab === \"ARTISTS\"}\n        />\n        <TabButton\n          title=\"ALBUMS\"\n          onClick={() => setSelectedSongTab(\"ALBUMS\")}\n          isSelected={selectedSongTab === \"ALBUMS\"}\n        />\n        <TabButton\n          title=\"PLAYLISTS\"\n          onClick={() => setSelectedSongTab(\"PLAYLISTS\")}\n          isSelected={selectedSongTab === \"PLAYLISTS\"}\n        />\n      </div>\n      {selectedSongTab === \"ARTISTS\" && artists && !isempty(artists)\n        ? Object.keys(artists).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={artists[id].name}\n              data={artists[id].songs}\n            />\n          ))\n        : selectedSongTab === \"ARTISTS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no artists have been found.\n            </div>\n          )}\n      {selectedSongTab === \"ALBUMS\" && albums && !isempty(albums)\n        ? Object.keys(albums).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={albums[id].name}\n              data={albums[id].songs}\n            />\n          ))\n        : selectedSongTab === \"ALBUMS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no albums have been found.\n            </div>\n          )}\n      {selectedSongTab === \"PLAYLISTS\" && playlists && !isempty(playlists)\n        ? Object.keys(playlists).map((id) => (\n            <Accordion\n              key={`accordion-${id}`}\n              title={playlists[id].name}\n              data={playlists[id].songs}\n            />\n          ))\n        : selectedSongTab === \"PLAYLISTS\" && (\n            <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n              Sorry no playlists have been found.\n            </div>\n          )}\n      {selectedSongTab === \"SONGS\" && songs && songs.length > 0 ? (\n        <div style={{ marginTop: \"80px\" }}>\n          <SongList data={songs} isVisible />\n        </div>\n      ) : (\n        selectedSongTab === \"SONGS\" && (\n          <div style={{ fontSize: \"48px\", textAlign: \"center\" }}>\n            Sorry no songs have been found.\n          </div>\n        )\n      )}\n    </>\n  );\n};\n\nexport default SongsTab;\n"]},"metadata":{},"sourceType":"module"}