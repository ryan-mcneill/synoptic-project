{"ast":null,"code":"import { SET_BACKGROUND, SET_SONG } from \"../types\";\nimport axios from \"axios\";\nexport const setCurrentSong = data => ({\n  type: SET_SONG,\n  data\n});\nexport const setBackground = data => ({\n  type: SET_BACKGROUND,\n  data\n});\nexport const getBackground = () => {\n  return dispatch => {\n    axios.get(`/api/songs/${type}/${id}`).then(res => {\n      dispatch(setBackground(res.data));\n    }).catch(err => {\n      dispatch(fetchPlaylistFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mcneillr/personal/synoptic-project/packages/app/src/store/actions/currentSongActions.ts"],"names":["SET_BACKGROUND","SET_SONG","axios","setCurrentSong","data","type","setBackground","getBackground","dispatch","get","id","then","res","catch","err","fetchPlaylistFailure","message"],"mappings":"AAAA,SAGEA,cAHF,EAIEC,QAJF,QAMO,UANP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAqC;AACjEC,EAAAA,IAAI,EAAEJ,QAD2D;AAEjEG,EAAAA;AAFiE,CAArC,CAAvB;AAKP,OAAO,MAAME,aAAa,GAAIF,IAAD,KAA2C;AACtEC,EAAAA,IAAI,EAAEL,cADgE;AAEtEI,EAAAA;AAFsE,CAA3C,CAAtB;AAKP,OAAO,MAAMG,aAAa,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAwB;AAE7BN,IAAAA,KAAK,CACFO,GADH,CACQ,cAAaJ,IAAK,IAAGK,EAAG,EADhC,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbJ,MAAAA,QAAQ,CAACF,aAAa,CAACM,GAAG,CAACR,IAAL,CAAd,CAAR;AACD,KAJH,EAKGS,KALH,CAKUC,GAAD,IAAS;AACdN,MAAAA,QAAQ,CAACO,oBAAoB,CAACD,GAAG,CAACE,OAAL,CAArB,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM","sourcesContent":["import {\n  Background,\n  CurrentSongActions,\n  SET_BACKGROUND,\n  SET_SONG,\n  Song\n} from \"../types\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\n\nexport const setCurrentSong = (data: Song): CurrentSongActions => ({\n  type: SET_SONG,\n  data\n});\n\nexport const setBackground = (data: Background): CurrentSongActions => ({\n  type: SET_BACKGROUND,\n  data\n});\n\nexport const getBackground = () => {\n  return (dispatch: Dispatch) => {\n\n    axios\n      .get(`/api/songs/${type}/${id}`)\n      .then((res) => {\n        dispatch(setBackground(res.data));\n      })\n      .catch((err) => {\n        dispatch(fetchPlaylistFailure(err.message));\n      });\n  };\n};"]},"metadata":{},"sourceType":"module"}